{"version":3,"sources":["views/Navigation.js","views/Body.js","views/Compendio.js","views/Home.js","views/Personajes.js","views/Convertidor.js","views/CharCreator.js","App.js","redux/reducers/loginReducers.js","redux/store.js","index.js"],"names":["Navigation","loginstate","_React$useState","React","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","useDispatch","useSelector","store","authReducer","isLogged","react","Container","maxWidth","id","Stack","direction","Box","width","react_router_dom","as","Link","to","src","alt","BigButtonTooltip","styled","_ref","className","props","objectWithoutProperties","Tooltip","assign","classes","popper","_ref2","theme","defineProperty","concat","tooltipClasses","tooltip","backgroundColor","color","fontSize","typography","pxToRem","border","HugeButton","Button","_ref4","_ref5","breakpoints","down","height","Body","fixed","component","Grid","container","spacing","justifyContent","alignItems","item","xs","lg","title","Typography","followCursor","variant","Compendio","Rating","name","value","readOnly","max","emptyIcon","Star_default","a","style","opacity","precision","Home","ConverterButton","maxHeight","minWidth","minHeight","&:hover","Personajes","Add_default","sx","mr","ClickedButton","IconSlider","Slider","& .MuiSlider-track","& .MuiSlider-thumb","&:focus, &:hover, &.Mui-active, &.Mui-focusVisible","boxShadow","&:before","display","& .MuiSlider-valueLabel","lineHeight","background","padding","borderRadius","transformOrigin","transform","&.MuiSlider-valueLabelOpen","& > *","TutorialTooltip","_ref3","arrow","Convertidor","dataType","setData","abilityTittle","setAbTittle","_React$useState5","_React$useState6","actionType","setActionType","_React$useState7","_React$useState8","attackType","setattackType","_React$useState9","_React$useState10","attackTypeRange","setattackTypeRange","_React$useState11","_React$useState12","attackRange","setattackRange","_React$useState13","_React$useState14","abilitytext","setabilitytext","_React$useState15","_React$useState16","aditionalAttack","setaditionalAttack","_React$useState17","_React$useState18","classType","setclassType","_React$useState19","_React$useState20","contador","setContador","_React$useState21","_React$useState22","setBPcontador","_React$useState23","_React$useState24","aoeAttackType","setaoeAttackType","_React$useState25","_React$useState26","aoeAttack","setaoeAttack","_React$useState27","_React$useState28","aoeAttackValue","setaoeAttackValue","_React$useState29","Aura","Autohit","Combo","Mark","Stance","Summon","Terrain","_React$useState30","extraAbilities","setextraAbilities","actions","componente_bp","_React$useState31","bondName","bondDes","bondBonus1","bondBonus2","ideals","I1","I2","I3","maxStress","StressRelief","StressSpecial","Harm","BondPowers","BP1","BP2","BP3","BP4","BP5","BP6","BP7","BP8","BP9","BP10","BP11","_React$useState32","bondClass","setbondClass","size","useWindowSize","handleType","event","target","handleaoeAttackType","handleaoeAttackValue","handleextraAbilities","objectSpread","checked","handlebondClass","handleBondSubClass","handleBondPowers","bptarget","bpvalue","i","push","autoComplete","TextField","fullWidth","multiline","required","label","maxRows","rows","helperText","BPcontador","onChange","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","md","sm","onClick","Convertidor_ConverterButton","TransitionComponent","Fade","TransitionProps","timeout","toString","InputProps","FormControlLabel","control","Checkbox","disabled","FormLabel","map","action","alignContent","Psychology_default","aria-label","defaultValue","valueLabelDisplay","step","marks","min","Sick_default","IconButton","count","AddCircle_default","ls","jsonString","encodeURIComponent","JSON","stringify","link","document","createElement","href","download","click","BondButton","HalfBondButton","&.Mui-disabled","InformationTooltip","_ref7","_ref8","_ref9","_ref10","IconFab","Fab","_ref11","position","ValtierTextField","& label.Mui-focused","& .MuiInput-underline:after","borderBottomColor","& .MuiOutlinedInput-root","&:hover fieldset","&.Mui-focused fieldset","borderColor","StyledRating","select","&:after","icon","fill","& .MuiRating-iconFilled","& .MuiRating-iconHover","CharCreator","viewSelector","setviewSelector","infoText","setinfoText","charName","setcharName","charBiogr","setcharBiogr","charRace","setcharRace","charCulture","setcharCulture","keySelected","setkeySelected","selectedBondBonus","setselectedBondBonus","actionAssign","setactionAssign","tutorialValue","settutorialValue","setcombatAction","bondSelected","charLevel","NarrativeChar","BondName","Sneak","Excel","Survey","Channel","Charm","Command","Tinker","Study","Recall","Traverse","Smash","Endure","Snipe","Skirmish","Crush","Stress","Ideal1","Ideal2","Ideal3","character","setCharacter","action_des","actionsValues","setactionsValues","bondKeys","keys","BondsJson","navigate","useNavigate","selectedBond","finalNarrative","bond_component","length","element","console","log","handleinfoText","handleselectedBondBonus","handlekeySelected","handleActionPoint","newValue","handleActionPointBond","Number","handleActionCombat","index","actualBond","handlerBond","flexWrap","& > :not(style)","m","Paper","elevation","my","mx","gutterBottom","Chip","bgcolor","Divider","ButtonGroup","orientation","CharCreator_TutorialTooltip","Info_default","HelpOutline_default","Breadcrumbs","underline","fontFamily","letterSpacing","People_default","Badge_default","RecordVoiceOver_default","rowSpacing","onOpen","CharCreator_ConverterButton","GpsFixed_default","LocationSearching_default","CharCreator_ClickedButton","stringChar","handleFinalNarrative","_useState","useState","undefined","_useState2","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","FooterButton","App","react_default","flexDirection","views_Navigation","react_router","path","views_Body","views_Compendio","views_Convertidor","views_Personajes","views_CharCreator","py","px","mt","Avatar","initialState","localStorage","getItem","state","arguments","type","payload","appReducer","combineReducers","createStore","ReactDOM","createRoot","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.5c208f2d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Grid } from '@mui/material';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nconst settings = ['Perfil', 'Backup Data', 'Cerrar Sesión'];\r\n\r\nconst Navigation = (loginstate) => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n      <Container maxWidth id=\"Father_Nav\">\r\n        <Stack direction=\"row\">\r\n            <Box width=\"100%\" id=\"Navigation\">\r\n                <Link as={Link} to='/valtiersystem/'>\r\n                    <img src='https://i.imgur.com/FkQ2ezU.png' width={200} alt='Valtierlogo'/>\r\n                </Link>\r\n            </Box>\r\n            <Box id=\"Navigation-Cont\">\r\n            </Box>\r\n        </Stack>\r\n      </Container>\r\n    \r\n  );\r\n};\r\n\r\nexport default Navigation;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport { useWindowSize } from '../App';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\n  \r\n  const BigButtonTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: '#ffaeae',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 235,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #d89393',\r\n    },\r\n  }));\r\n\r\n  const HugeButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    width: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n        height: '30vh',\r\n      },\r\n    height: '50vh',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n  }));\r\n\r\nconst Body = (loginstate) => {\r\n    return(\r\n            <Container fixed component=\"main\">\r\n                <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={6} lg={4}>\r\n                    <BigButtonTooltip\r\n                            title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\"><b>Compendio</b></Typography>\r\n                                {\"Información sobre \"} <b>{'Habilidades'}</b> {\", \"} <b>{'Clases'}</b>\r\n                                {\", \"} <b>{'Traits'}</b> {\" y todo lo referente a \"} <b>{'ICON.'}</b>\r\n                            </React.Fragment>\r\n                            }\r\n                            followCursor\r\n                        >\r\n                        <Link as={Link} to=\"/valtiersystem/compendio\">\r\n                            <HugeButton variant=\"contained\">\r\n                                <Grid container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    spacing={2}>\r\n                                    <Grid item>\r\n                                        <img src='https://i.imgur.com/g0Y8ikS.png' width=\"60%\" alt='compendioIcon'/>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography color=\"inherit\">Compendio</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </HugeButton>\r\n                        </Link>\r\n                    </BigButtonTooltip>\r\n                    </Grid>\r\n                    <Grid item xs={6} lg={4}>\r\n                    <BigButtonTooltip\r\n                            title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\"><b>Personajes</b></Typography>\r\n                                {\"Creación y administración de tus \"} <b>{'Personajes'}</b>\r\n                                {\" creados, tanto jugables cómo \"} <b>{'NPCs.'}</b>\r\n                            </React.Fragment>\r\n                            }\r\n                            followCursor\r\n                        >\r\n                        <Link as={Link} to=\"/valtiersystem/personajes\">\r\n                            <HugeButton variant=\"contained\">\r\n                                <Grid container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    spacing={2}>\r\n                                    <Grid item>\r\n                                        <img src='https://i.imgur.com/dTospxE.png' width=\"60%\" alt='characterIcon'/>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography color=\"inherit\">Personajes</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </HugeButton>\r\n                        </Link>\r\n                    </BigButtonTooltip>\r\n                    </Grid>\r\n                    <Grid item xs={6} lg={4}>\r\n                    <BigButtonTooltip\r\n                            title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\"><b>Creador de Contenido</b></Typography>\r\n                                {\"Herramienta para \"} <b>{'DMs'}</b>\r\n                                {\" y \"} <b>{'jugadores'}</b> {\" experimentados que quieran agregar material\"}\r\n                                {\" único y Hombebrew a sus partidas y campañas.\"}\r\n                            </React.Fragment>\r\n                            }\r\n                            followCursor\r\n                        >\r\n                        <Link as={Link} to=\"/valtiersystem/creador\">\r\n                            <HugeButton variant=\"contained\" id='GroupButtons'>\r\n                                <Grid container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    spacing={2}>\r\n                                    <Grid item>\r\n                                        <img src='https://i.imgur.com/qO28W9k.png' width=\"60%\" alt='creatorIcon'/>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography color=\"inherit\">Creador de Contenido</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </HugeButton>\r\n                        </Link>\r\n                    </BigButtonTooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default Body;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Stack from '@mui/material/Stack';\r\nimport Rating from '@mui/material/Rating';\r\nimport StarIcon from '@mui/icons-material/Star';\r\n\r\nconst Compendio = () => {\r\n    const value = 2;\r\n    const initValue= 0;\r\n    return(\r\n            <Container maxWidth='lg' >\r\n                <Grid container>\r\n                    <Grid item>\r\n                    <Stack direction=\"row\" spacing={0}>\r\n                        <Rating\r\n                            name=\"text-feedback\"\r\n                            value={value}\r\n                            readOnly\r\n                            max={2}\r\n                            emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                        />\r\n                        <Rating\r\n                            name=\"text-feedback\"\r\n                            value={initValue}\r\n                            precision={1}\r\n                            emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                        />\r\n                    </Stack>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default Compendio;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nimport Navigation from './../views/Navigation.js';\r\nimport Footer from './../views/Footer.js';\r\nimport Body from './../views/Body.js';\r\nimport Compendio from './../views/Compendio.js';\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n\r\n\r\n  console.log(isLogged);\r\n\r\n  return (\r\n        <Grid container rowSpacing={3} flex>\r\n            <Grid item xs={12}>\r\n                <Navigation loginstate={isLogged}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Routes>\r\n                    <Route path='/' element={<Body loginstate={isLogged}/>}/>\r\n                    <Route path='/compendio' element={<Compendio/>}/>\r\n                </Routes>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n             <Footer loginstate={isLogged}/>\r\n            </Grid>\r\n        </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport GrainIcon from '@mui/icons-material/Grain';\r\n\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '50%', \r\n    maxHeight: '100%', \r\n    minWidth: '50%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Personajes = () => {\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={0} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} lg={12}>\r\n                    {/* Aqui vamos a colocar un Map con TODOS los personajes que hay*/}\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                    <Link as={Link} to=\"/valtiersystem/characterCreator\">\r\n                        <ConverterButton variant=\"contained\">\r\n                            <AddIcon sx={{ mr: 0.5 }} fontSize=\"inherit\"/>\r\n                            Nuevo Personaje\r\n                        </ConverterButton>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Personajes;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Slider from '@mui/material/Slider';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fade from '@mui/material/Fade';\r\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\n\r\n\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport SickIcon from '@mui/icons-material/Sick';\r\nimport PsychologyIcon from '@mui/icons-material/Psychology';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\nimport { sizeHeight } from '@mui/system';\r\nimport { useWindowSize } from './../App.js';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst ClickedButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#ff3865',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#9c233f',\r\n    },\r\n}));\r\n\r\nconst IconSlider = styled(Slider)({\r\n  color: '#ff3865',\r\n  height: 8,\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    height: 24,\r\n    width: 24,\r\n    border: '2px solid currentColor',\r\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n      boxShadow: 'inherit',\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  '& .MuiSlider-valueLabel': {\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    background: 'unset',\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    borderRadius: '50% 50% 50% 0',\r\n    backgroundColor: '#95223c',\r\n    transformOrigin: 'bottom left',\r\n    transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\r\n    '&:before': { display: 'none' },\r\n    '&.MuiSlider-valueLabelOpen': {\r\n      transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',\r\n    },\r\n    '& > *': {\r\n      transform: 'rotate(45deg)',\r\n    },\r\n  },\r\n});\r\n\r\nconst TutorialTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n      color: \"#4a001d\",\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: \"#4a001d\",\r\n    },\r\n}));\r\n  \r\n\r\nconst Convertidor = (loginstate) => {\r\n\r\n    const [dataType, setData] = React.useState('');\r\n    const [abilityTittle, setAbTittle] = React.useState('');\r\n    const [actionType, setActionType] = React.useState('');\r\n    const [attackType, setattackType] = React.useState('');\r\n    const [attackTypeRange, setattackTypeRange] = React.useState('');\r\n    const [attackRange, setattackRange] = React.useState('');\r\n    const [abilitytext, setabilitytext] = React.useState('');\r\n    const [aditionalAttack, setaditionalAttack] = React.useState('');\r\n    const [classType, setclassType] = React.useState('');\r\n    const [contador, setContador] = React.useState(0);\r\n    const [BPcontador, setBPcontador] = React.useState(0);\r\n    const [aoeAttackType, setaoeAttackType] = React.useState('');\r\n    const [aoeAttack, setaoeAttack] = React.useState(true);\r\n    const [aoeAttackValue, setaoeAttackValue] = React.useState('');\r\n    const [extraAbilities, setextraAbilities] = React.useState({\r\n        Aura: false,\r\n        Autohit: false,\r\n        Combo: false,\r\n        Mark: false,\r\n        Stance: false,\r\n        Summon: false,\r\n        Terrain: false,\r\n    });\r\n    const { Aura, Autohit, Combo, Mark, Stance, Summon, Terrain } = extraAbilities;\r\n    const actions = [\"Sneak\", \"Traverse\", \"Survey\", \"Study\", \"Charm\", \"Command\", \"Tinker\", \"Excel\", \"Smash\", \"Endure\", \"Channel\", \"Recall\"];\r\n\r\n    let componente_bp = [];\r\n\r\n    const [bondClass, setbondClass] = React.useState({\r\n        bondName: \"\",\r\n        bondDes: \"\",\r\n        bondBonus1: \"\",\r\n        bondBonus2: \"\",\r\n        ideals:{\r\n            I1: \"\",\r\n            I2: \"\",\r\n            I3: \"\"\r\n            },\r\n        maxStress: 1,\r\n        StressRelief: \"\",\r\n        StressSpecial: \"\",\r\n        Harm: 1,\r\n        BondPowers: {\r\n            BP1: \"\", BP2: \"\", BP3: \"\", BP4: \"\", BP5: \"\", BP6: \"\", BP7: \"\", BP8: \"\",\r\n            BP9: \"\", BP10: \"\", BP11: \"\"\r\n            \r\n        }\r\n    });\r\n    \r\n    const size = useWindowSize();\r\n\r\n    const handleType = (event) => {\r\n        setData(event.target.value);\r\n    };\r\n\r\n    const handleAbTittle = (event) => {\r\n        setAbTittle(event.target.value);\r\n    };\r\n\r\n    const handleActionType = (event) => {\r\n        setActionType(event.target.value);\r\n    };\r\n\r\n    const handleattackType = (event) => {\r\n        setattackType(event.target.value);\r\n    }\r\n\r\n    const handleattackTypeRange = (event) => {\r\n        setattackTypeRange(event.target.value);\r\n    }\r\n\r\n    const handleattackRange = (event) => {\r\n        setattackRange(event.target.value);\r\n    }\r\n\r\n    const handleabilitytext = (event) => {\r\n        setabilitytext(event.target.value);\r\n    }\r\n\r\n    const handleaditionalAttack = (event) => {\r\n        setaditionalAttack(event.target.value);\r\n    }\r\n\r\n    const handleclassType = (event) => {\r\n        setclassType(event.target.value)\r\n    }\r\n\r\n    const handleUpContador = () => {\r\n        setContador(count => count + 1);\r\n        setBPcontador(\"BP\"+(contador+1));\r\n    }\r\n\r\n    const handleResetContador = () => {\r\n        setContador(0)\r\n    }\r\n\r\n    const handleaoeAttack = (event) => {\r\n        setaoeAttack(event.target.checked)\r\n    }\r\n\r\n    const handleaoeAttackType = (event) => {\r\n        setaoeAttackType(event.target.value)\r\n    }\r\n\r\n    const handleaoeAttackValue = (event) => {\r\n        setaoeAttackValue(event.target.value)\r\n    }\r\n\r\n    const handleextraAbilities = (event) => {\r\n        setextraAbilities({\r\n            ...extraAbilities,\r\n            [event.target.name]: event.target.checked\r\n        })\r\n    }\r\n\r\n    const handlebondClass = (event) => {\r\n        setbondClass({\r\n            ...bondClass,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleBondSubClass = (event) => {\r\n        setbondClass({\r\n            ...bondClass,\r\n            [\"ideals\"]: {...bondClass.ideals, [event.target.name]: event.target.value}\r\n        });\r\n    }\r\n\r\n    const handleBondPowers = (event) => {\r\n        let bptarget = event.target.name;\r\n        let bpvalue = event.target.value;\r\n        setbondClass({\r\n            ...bondClass,\r\n            [\"BondPowers\"]: \r\n                {...bondClass.BondPowers, [bptarget]: bpvalue\r\n            }\r\n        });\r\n    }\r\n\r\n    const exportData = () => {\r\n        const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(bondClass)\r\n        )}`;\r\n        const link = document.createElement(\"a\");\r\n        link.href = jsonString;\r\n        link.download = \"btype_\"+bondClass.bondName+\".json\";\r\n        link.click();\r\n      };\r\n\r\n    for (let i = 1; i <= contador; i++) {\r\n        if (i == 11) {\r\n            componente_bp.push(\r\n                <Grid item xs={12} lg={6}>\r\n                    <Box component=\"form\" autoComplete=\"off\">\r\n                        <TextField\r\n                            id=\"filled-multiline-flexible\"\r\n                            fullWidth\r\n                            multiline \r\n                            required\r\n                            label={\"Gambit Name\"}\r\n                            maxRows={2}\r\n                            rows={2}\r\n                            name={\"BP\"+i}\r\n                            helperText=\"Nombre del Gambito - Poderes Requeridos - Descripción\"\r\n                            value={bondClass.BondPowers.BPcontador}\r\n                            onChange={handleBondPowers}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            )\r\n        }\r\n        else {\r\n            componente_bp.push(\r\n                <Grid item xs={12} lg={12}>\r\n                    <Box component=\"form\" autoComplete=\"off\">\r\n                        <TextField\r\n                            id=\"filled-multiline-flexible\"\r\n                            fullWidth\r\n                            multiline  \r\n                            required\r\n                            maxRows={2}\r\n                            rows={2}\r\n                            label={\"Bond Power \"+i}\r\n                            name={\"BP\"+i}\r\n                            helperText=\"NombreBondPower - opcional(Veces Por sesión) - Descripción\"\r\n                            value={bondClass.BondPowers.BPcontador}\r\n                            onChange={handleBondPowers}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Box id=\"Body\">\r\n            <Container fixed>\r\n                {size.width <= 640 ? (\r\n                    <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\" id=\"SpaceBRows\">\r\n                        <Grid item xs={12} lg={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel id=\"demo-simple-select-label\">Tipo de Dato</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={dataType}\r\n                                    label=\"Tipo de Dato\"\r\n                                    onChange={handleType}\r\n                                >\r\n                                <MenuItem value={1}>Habilidad</MenuItem>\r\n                                <MenuItem value={2}>Trait</MenuItem>\r\n                                <MenuItem value={3}>Limit Breaker</MenuItem>\r\n                                <MenuItem value={4}>Bond</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText>Escoja el tipo de Dato a Convertir</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                ) : (\r\n                    <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\" id=\"SpaceBRows\">\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 1 ? (\r\n                                <ClickedButton variant=\"contained\" value={1} onClick={handleType}>Habilidad</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={1} onClick={handleType}>Habilidad</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 2 ? (\r\n                                <ClickedButton variant=\"contained\" value={2} onClick={handleType}>Trait</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={2} onClick={handleType}>Trait</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 3 ? (\r\n                                <ClickedButton variant=\"contained\" value={3} onClick={handleType}>Limit Breaker</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={3} onClick={handleType}>Limit Breaker</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 4 ? (\r\n                                <TutorialTooltip\r\n                                TransitionComponent={Fade}\r\n                                TransitionProps={{ timeout: 600 }}\r\n                                title={\r\n                                    <React.Fragment>\r\n                                        <Typography color=\"inherit\"><b>Bond</b></Typography>\r\n                                        {\"Un Bond es un 'Pacto' que utiliza la parte Narrativa de los Personajes para dar ciertas caracteristicas \"}\r\n                                        {\"necesarias para estos, desde cuanto daño pueden sostener antes de recibir un 'Burden', cuando estrés pueden \"}\r\n                                        {\"soportar, los ideales que sigue el personaje y los aspectos mecanicos más necesarios cómo los Bond Powers que \"}\r\n                                        {\"pueden dar vuelta situaciones o dar bonus a acciones riesgosas.\"}\r\n                                    </React.Fragment>\r\n                                    }\r\n                            >\r\n                                <ClickedButton variant=\"contained\" value={4} onClick={handleType}>Bond</ClickedButton>\r\n                                </TutorialTooltip>\r\n                            ) : (\r\n                                <TutorialTooltip\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                    title={\r\n                                        <React.Fragment>\r\n                                            <Typography color=\"inherit\"><b>Bond</b></Typography>\r\n                                            {\"Un Bond es un 'Pacto' que utiliza la parte Narrativa de los Personajes para dar ciertas caracteristicas \"}\r\n                                            {\"necesarias para estos, desde cuanto daño pueden sostener antes de recibir un 'Burden', cuando estrés pueden \"}\r\n                                            {\"soportar, los ideales que sigue el personaje y los aspectos mecanicos más necesarios cómo los Bond Powers que \"}\r\n                                            {\"pueden dar vuelta situaciones o dar bonus a acciones riesgosas.\"}\r\n                                        </React.Fragment>\r\n                                        }\r\n                                >\r\n                                    <ConverterButton variant=\"contained\" value={4} onClick={handleType}>Bond</ConverterButton>\r\n                                </TutorialTooltip>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n\r\n                {/*----------------------------------------------Tipo Convertidor (HABILIDAD)--------------------------------------*/}\r\n                \r\n                    {dataType == 1 && (\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} lg={4}>\r\n                                <Box component=\"form\" autoComplete=\"off\">\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        required\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"Nombre Habilidad\"\r\n                                        helperText=\"Dale un nombre interesante a tu poder\"\r\n                                        multiline\r\n                                        maxRows={4}\r\n                                        value={abilityTittle}\r\n                                        onChange={handleAbTittle}\r\n                                    />\r\n                                    <div>{abilityTittle}</div>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Tipo de Acción</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={actionType}\r\n                                        label=\"Tipo de Acción\"\r\n                                        onChange={handleActionType}\r\n                                    >\r\n                                    <MenuItem value={1}>Ataque</MenuItem>\r\n                                    <MenuItem value={2}>Acción</MenuItem>\r\n                                    <MenuItem value={3}>Interrupt</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>Selecciona la naturaleza de tu Habilidad</FormHelperText>\r\n                                    <div>{actionType}</div>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        \r\n                        \r\n                            {/*-----------------Tipo Habilidad (ATAQUE)----------------------------------------------------*/}\r\n\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={attackType}\r\n                                            label=\"Tipo de Ataque\"\r\n                                            onChange={handleattackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Light</MenuItem>\r\n                                        <MenuItem value={2}>Heavy</MenuItem>\r\n                                        <MenuItem value={3}>SuperHeavy</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Selecciona el poder de tu Ataque</FormHelperText>\r\n                                        <div>{attackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={2}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Melee o Rango</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={attackTypeRange}\r\n                                            label=\"Melee o Rango\"\r\n                                            onChange={handleattackTypeRange}\r\n                                        >\r\n                                        <MenuItem value={1}>Melee</MenuItem>\r\n                                        <MenuItem value={2}>Range</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText></FormHelperText>\r\n                                        <div>{attackTypeRange}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={2}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            required\r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de Ataque\"\r\n                                            helperText=\"El Numero de Casillas que abarca el ataque\"\r\n                                            value={attackRange}\r\n                                            onChange={handleattackRange}\r\n                                        />\r\n                                        <div>{attackRange}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={2} lg={1}>\r\n                                    <TextField\r\n                                        id=\"outlined-read-only-input\"\r\n                                        label=\"Daño\"\r\n                                        value={attackType.toString()+\"[D]\"}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={10} lg={3}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Adicional al Daño Base\"\r\n                                            helperText=\"Escribe los efectos y daños adicionales o calculos diferentes\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={aditionalAttack}\r\n                                            onChange={handleaditionalAttack}\r\n                                        />\r\n                                        <div>{aditionalAttack}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={aoeAttack} onChange={handleaoeAttack} name=\"Ataque En Area\" />\r\n                                        }\r\n                                        label=\"Ataque En Area\"\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == true && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque en Area</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={aoeAttackType}\r\n                                            label=\"Tipo de Ataque en Area\"\r\n                                            onChange={handleaoeAttackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Line</MenuItem>\r\n                                        <MenuItem value={2}>Blast</MenuItem>\r\n                                        <MenuItem value={3}>Close Blast</MenuItem>\r\n                                        <MenuItem value={4}>Arc</MenuItem>\r\n                                        <MenuItem value={5}>Cross</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Elige de qué modo hace daño en area tu ataque</FormHelperText>\r\n                                        <div>{aoeAttackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == false && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth disabled>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque en Area</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={aoeAttackType}\r\n                                            label=\"Tipo de Ataque en Area\"\r\n                                            onChange={handleaoeAttackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Line</MenuItem>\r\n                                        <MenuItem value={2}>Blast</MenuItem>\r\n                                        <MenuItem value={3}>Close Blast</MenuItem>\r\n                                        <MenuItem value={4}>Arc</MenuItem>\r\n                                        <MenuItem value={5}>Cross</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Elige de qué modo hace daño en area tu ataque</FormHelperText>\r\n                                        <div>{aoeAttackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == true && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de AOE\"\r\n                                            helperText=\"Rango del Area de Efecto\"\r\n                                            value={aoeAttackValue}\r\n                                            onChange={handleaoeAttackValue}\r\n                                        />\r\n                                        <div>{aoeAttackValue}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == false && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            disabled\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de AOE\"\r\n                                            helperText=\"Rango del Area de Efecto\"\r\n                                            value={aoeAttackValue}\r\n                                            onChange={handleaoeAttackValue}\r\n                                        />\r\n                                        <div>{aoeAttackValue}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item xs={12} lg={8}>\r\n                                <TextField\r\n                                    id=\"filled-multiline-flexible\"\r\n                                    label=\"Descripción de Efectos\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    helperText=\"Describe tu habilidad con detalle, recuerda utilizar las Palabras Reservadas\"\r\n                                    maxRows={4}\r\n                                    value={abilitytext}\r\n                                    onChange={handleabilitytext}\r\n                                    variant=\"filled\"\r\n                                />\r\n                            </Grid>\r\n                           <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Clase</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={classType}\r\n                                        label=\"Clase\"\r\n                                        onChange={handleclassType}\r\n                                    >\r\n                                    <MenuItem value={1}>Stalwart</MenuItem>\r\n                                    <MenuItem value={2}>Vagabond</MenuItem>\r\n                                    <MenuItem value={3}>Mendicant</MenuItem>\r\n                                    <MenuItem value={4}>Wright</MenuItem>\r\n                                    <MenuItem value={5}>Homebrew y Otros...</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>Seleccione a qué clase pertenece la habilidad</FormHelperText>\r\n                                    <div>{classType}</div>\r\n                                </FormControl>\r\n                           </Grid>\r\n                           <Grid item xs={12} lg={8}>\r\n\r\n                                <FormLabel component=\"legend\">Lista de Efectos Especiales</FormLabel>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Aura} onChange={handleextraAbilities} name=\"Aura\" />\r\n                                    }\r\n                                    label=\"Aura\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Autohit} onChange={handleextraAbilities} name=\"Autohit\" />\r\n                                    }\r\n                                    label=\"Autohit\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Combo} onChange={handleextraAbilities} name=\"Combo\" />\r\n                                    }\r\n                                    label=\"Combo\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Mark} onChange={handleextraAbilities} name=\"Mark\" />\r\n                                    }\r\n                                    label=\"Mark\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Stance} onChange={handleextraAbilities} name=\"Stance\" />\r\n                                    }\r\n                                    label=\"Stance\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Summon} onChange={handleextraAbilities} name=\"Summon\" />\r\n                                    }\r\n                                    label=\"Summon\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Terrain} onChange={handleextraAbilities} name=\"Terrain\" />\r\n                                    }\r\n                                    label=\"Terrain\"\r\n                                />\r\n                                <FormHelperText>Escoja qué Efectos Especiales tiene su habilidad</FormHelperText>\r\n\r\n                           </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 2 && (\r\n                        <div>Se Eligio Trait</div>\r\n                    )}\r\n                    {dataType == 3 && (\r\n                        <div>Se Eligio Limit Breaker</div>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Grid item xs={12} lg={4}>\r\n                                <Box component=\"form\" autoComplete=\"off\">\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        required\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"Nombre del Bond\"\r\n                                        helperText=\"Dale un nombre interesante al Bond\"\r\n                                        name=\"bondName\"\r\n                                        value={bondClass.bondName}\r\n                                        onChange={handlebondClass}\r\n                                    />\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Aumento Acción 1</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        name=\"bondBonus1\"\r\n                                        value={bondClass.bondBonus1}\r\n                                        label=\"Aumento Acción 1\"\r\n                                        onChange={handlebondClass}\r\n                                    >\r\n                                    {actions.map(\r\n                                        (action) => action !== bondClass.bondBonus2 && (\r\n                                            <MenuItem value={action}>{action}</MenuItem>\r\n                                        )\r\n                                    )}\r\n                                    \r\n                                    </Select>\r\n                                    <FormHelperText>Elige la 1era acción basica del Bond</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Aumento Acción 2</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        name=\"bondBonus2\"\r\n                                        value={bondClass.bondBonus2}\r\n                                        label=\"Aumento Acción 2\"\r\n                                        onChange={handlebondClass}\r\n                                    >\r\n                                    {actions.map(\r\n                                        (action) => action !== bondClass.bondBonus1 && (\r\n                                            <MenuItem value={action}>{action}</MenuItem>\r\n                                        )\r\n                                    )}\r\n                                    </Select>\r\n                                    <FormHelperText>Elige la 2da acción basica del Bond</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={4} id=\"SpaceBRows\">\r\n                            <Grid item xs={12} lg={6}>\r\n                                <Grid container spacing={3.3} id=\"SpaceBRows\">\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Descripción de Bond\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            name=\"bondDes\"\r\n                                            helperText=\"Da algunos detalles interesantes de la historia detrás del Bond\"\r\n                                            rows={5.1}\r\n                                            value={bondClass.bondDes}\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} lg={6}>\r\n                                        <Stack alignContent=\"center\">\r\n                                            <Typography\r\n                                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                                color=\"text.primary\"\r\n                                                >\r\n                                                <PsychologyIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                                Max. Stress\r\n                                            </Typography>\r\n                                            <IconSlider\r\n                                                aria-label=\"Max Stress\"\r\n                                                defaultValue={1}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                                step={1}\r\n                                                marks\r\n                                                min={1}\r\n                                                max={6}\r\n                                                name=\"maxStress\"\r\n                                                value={bondClass.maxStress}\r\n                                                onChange={handlebondClass}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} lg={6}>\r\n                                        <Stack alignContent=\"center\">\r\n                                            <Typography\r\n                                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                                color=\"text.primary\"\r\n                                                >\r\n                                                <SickIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                                Max. Harm\r\n                                            </Typography>\r\n                                            <IconSlider\r\n                                                aria-label=\"Max Harm\"\r\n                                                defaultValue={1}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                                step={1}\r\n                                                marks\r\n                                                min={1}\r\n                                                max={5}\r\n                                                name=\"Harm\"\r\n                                                value={bondClass.Harm}\r\n                                                onChange={handlebondClass}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Stress Relief\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Cuanto Stress apacigua tu personaje al realizar una acción particular\"\r\n                                            maxRows={3}\r\n                                            value={bondClass.StressRelief}\r\n                                            name=\"StressRelief\"\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>  \r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} lg={6}>\r\n                                <Grid container spacing={2} id=\"SpaceBRows\">\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 1\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Descubrí cosas nuevas de este mundo o probé algo realmente único\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I1}\r\n                                            name=\"I1\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 2\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Expresé mi historia, creencias y pasado a través de mis acciones\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I2}\r\n                                            name=\"I2\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 3\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Me enfrenté a los desafios utilizando mi astucia, perspicacia y habilidad\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I3}\r\n                                            name=\"I3\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Stress Special\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Algún bonus o mejora de acciones al estar estresado\"\r\n                                            maxRows={3}\r\n                                            value={bondClass.StressSpecial}\r\n                                            name=\"StressSpecial\"\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={2} id=\"SpaceBRows\">\r\n                            {contador < 11 && (\r\n                                <Grid item xs={12} lg={12}>\r\n                                    <IconButton id=\"contadorTotal\" aria-label=\"delete\" size=\"large\" onClick={handleUpContador}>\r\n                                        <AddCircleIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                    Bond Powers\r\n                                </Grid>\r\n                            )}\r\n                            {componente_bp}\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={2} id=\"SpaceBRows\">\r\n                            <Grid item xs={6} ls={6}>\r\n                                <ClickedButton variant=\"contained\" onClick={exportData}>Guardar Bond</ClickedButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n            </Container>\r\n        </Box>  \r\n    );\r\n}\r\n\r\nexport default Convertidor;","import * as React from 'react';\r\nimport * as BondsJson from './jsons/Bonds.json';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Paper from '@mui/material/Paper';\r\nimport Fab from '@mui/material/Fab';\r\n\r\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport BadgeIcon from '@mui/icons-material/Badge';\r\nimport GpsFixedIcon from '@mui/icons-material/GpsFixed';\r\nimport LocationSearchingIcon from '@mui/icons-material/LocationSearching';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\nimport Fade from '@mui/material/Fade';\r\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Rating from '@mui/material/Rating';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport { createTheme, ThemeProvider, styled} from '@mui/material/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link as routerLink,\r\n    useNavigate\r\n  } from 'react-router-dom';\r\nimport { width } from '@mui/system';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst BondButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: 120, \r\n    maxHeight: 300, \r\n    minWidth: 120, \r\n    minHeight: 300,\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst HalfBondButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: 120, \r\n    maxHeight: 150, \r\n    minWidth: 120, \r\n    minHeight: 150,\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n    \"&.Mui-disabled\": {\r\n        backgroundColor: '#b7766b',\r\n      }\r\n}));\r\n\r\nconst InformationTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  }));\r\n\r\nconst TutorialTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n      color: \"#4a001d\",\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: \"#4a001d\",\r\n    },\r\n  }));\r\n\r\nconst ClickedButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#ff3865',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#9c233f',\r\n    },\r\n}));\r\n\r\nconst IconFab = styled(Fab)(({theme}) => ({\r\n    position: \"absolute\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#ff3865\",\r\n    '&:hover': {\r\n        backgroundColor: '#b92849',\r\n    },\r\n}))\r\n \r\n\r\nconst ValtierTextField = styled(TextField)({\r\n    '& label.Mui-focused': {\r\n      color: '#ff3865',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#ff3865',\r\n    },\r\n\r\n    '& .MuiOutlinedInput-root': {\r\n      '&:hover fieldset': {\r\n        \r\n        \r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#ff3865',\r\n      },\r\n    },});\r\n\r\nconst ValtierSelect = styled(Select)({\r\n    select: {\r\n        '&:before': {\r\n            borderColor: '#ff3865',\r\n        },\r\n        '&:after': {\r\n            borderColor: '#ff3865',\r\n        }\r\n    },\r\n    icon: {\r\n        fill: '#ff3865',\r\n    },\r\n    });\r\n\r\nconst StyledRating = styled(Rating)({\r\n  '& .MuiRating-iconFilled': {\r\n    color: '#ff6d75',\r\n  },\r\n  '& .MuiRating-iconHover': {\r\n    color: '#ff3d47',\r\n  },\r\n});\r\n\r\nconst CharCreator = () => {\r\n\r\n    const [viewSelector, setviewSelector] = React.useState(1);\r\n    const [infoText, setinfoText] = React.useState('');\r\n    const [charName, setcharName] = React.useState('');\r\n    const [charBiogr, setcharBiogr] = React.useState('');\r\n    const [charRace, setcharRace] = React.useState('');\r\n    const [charCulture, setcharCulture] = React.useState('');\r\n    const [keySelected, setkeySelected] = React.useState('');\r\n    const [selectedBondBonus, setselectedBondBonus] = React.useState('');\r\n    const [actionAssign, setactionAssign] = React.useState(4);\r\n    const [tutorialValue, settutorialValue] = React.useState(false);\r\n    const [combatActionValue, setcombatAction] = React.useState(3);\r\n    const [character, setCharacter] = React.useState({\r\n        charName: \"\",\r\n        charBiogr: \"\",\r\n        charRace: \"\",\r\n        charCulture: \"\",\r\n        bondSelected: {},\r\n        charLevel: 1,\r\n        NarrativeChar: {\r\n            BondName: \"\",\r\n            Sneak: 0,\r\n            Excel: 0,\r\n            Survey: 0,\r\n            Channel: 0,\r\n            Charm: 0,\r\n            Command: 0,\r\n            Tinker: 0,\r\n            Study: 0,\r\n            Recall: 0,\r\n            Traverse: 0,\r\n            Smash: 0,\r\n            Endure: 0,\r\n            Snipe: 0,\r\n            Skirmish: 0,\r\n            Crush: 0,\r\n            Stress: 0,\r\n            Harm: 0,\r\n            StressRelief: \"\",\r\n            StressSpecial: \"\",\r\n            Ideal1: \"\",\r\n            Ideal2: \"\",\r\n            Ideal3: \"\",\r\n            BondPowers: \"\"\r\n        },\r\n    });\r\n\r\n    const actions = [\"Sneak\", \"Traverse\", \"Survey\", \"Study\", \"Charm\", \"Command\", \"Tinker\", \"Excel\", \"Smash\", \"Endure\", \"Channel\", \"Recall\"];\r\n    const action_des = {\r\n        \"Sneak\": \"Moverse con Sigilo y Silencio. Realiza acciones sin que te noten. Emboscar a alguien\",\r\n        \"Excel\": \"Actuar con precisión o habilidad. Disparar a un objeto pequeño a la distancia. Meterse en un espacio pequeño.\",\r\n        \"Survey\": \"Escanear y evaluar un area o situación. Ver a la distancia. Buscar huellas, pistas, caminos o cosas ocultas.\",\r\n        \"Channel\": \"Sentir, hablar con, entender o unirse con fuerzas magicas o criaturas. Interactuar con, alterar o hacer desaparecer fuerzas magias o constructos. Hacer un ritual.\",\r\n        \"Charm\": \"Hablar con carisma, apariencias o diplomacia. Pedir favores. Causar distracciones o molestias. Mentirle en la cara a alguien.\",\r\n        \"Command\": \"Usar la fuerza de voluntad y la fuerza para dirigir o intimidar. Guiar u organizar un grupo de personas.\",\r\n        \"Tinker\": \"Interactuar con, entender o usar alquimia, tecnomagia o cualquier tecnología. Arreglar o modificar mecanismos. Construir, mejorar o alterar tecnología.\",\r\n        \"Study\": \"Buscar algo o a alguien con mucho detalle. Entender las intenciones ajenas. Realizar una investigación o busqueda.\",\r\n        \"Recall\": \"Buscar o recordar lore, historia, rumores o memoria. Recordar detalles importantes sobre cualquier cosa.\",\r\n        \"Traverse\": \"Escalar, saltar, nadar. Correr agilmente. Perseguir o escapar. Pilotear un vehiculo o cabalgar un animal.\",\r\n        \"Smash\": \"Utilizar la fuerza fisica o magica. Lastimar a alguien. Lanzar un puñetazo o explosión para destrozar cosas.\",\r\n        \"Endure\": \"Forzarte más allá de tus limites. Superar el dolor, el frio, el calor o ambientes dificiles. Levantar o cargar algo extremadamente pesado.\",\r\n        \"Skirmish\": \"Actuar con movilidad, velocidad y violencia sigilosa. Poderoso contra muchos enemigos, pero debil contra enemigos poderosos, armados o grandes.\",\r\n        \"Snipe\": \"Actuar con violencia precisa, de larga distancia, pero lenta. Es menos riesgosa a distancia, pero más a corto alcance.\",\r\n        \"Crush\": \"Actuar con violencia destructiva, ruidosa a corto alcance. Es poderosa contra enemigos poderosos, armados y/o grandes. Debil contra muchos enemigos.\",\r\n    }\r\n    const combatAction = [\"Skirmish\", \"Crush\", \"Snipe\"];\r\n    const narCombatValues = [2,1,0];\r\n    const [actionsValues, setactionsValues] = React.useState({\r\n        \"Sneak\": 0, \"Traverse\": 0, \"Survey\": 0, \"Study\": 0, \"Charm\": 0, \"Command\": 0, \r\n        \"Tinker\": 0, \"Excel\": 0, \"Smash\": 0, \"Endure\": 0, \"Channel\": 0, \"Recall\": 0,\r\n        \"Skirmish\": 0, \"Crush\": 0, \"Snipe\": 0\r\n    })\r\n\r\n\r\n\r\n    const bondKeys = Object.keys(BondsJson.default);\r\n    const navigate = useNavigate();\r\n    var selectedBond = {};\r\n    var finalNarrative = {};\r\n    let bond_component = [];\r\n    var max = 0;\r\n\r\n    for (let i = 0; i < bondKeys.length; i++) {\r\n        let element = bondKeys[i][1];\r\n        if (element > max) {\r\n            max = element;\r\n        }\r\n        \r\n    }\r\n\r\n    console.log(character);\r\n\r\n    const handleinfoText = (event) => {\r\n        if (event.target.name) {\r\n            setinfoText(event.target.name)\r\n        }\r\n        else {\r\n            setinfoText(event.target.id)\r\n        }\r\n        \r\n    }\r\n\r\n    const handletutorialValue = (event) => {\r\n        settutorialValue(!tutorialValue)\r\n    }\r\n    \r\n    const handleselectedBondBonus = (event) => {\r\n        setselectedBondBonus(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: 2},\r\n        });\r\n    }\r\n\r\n    const handlecharName = (event) => {\r\n        setcharName(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handlecharBiogr = (event) => {\r\n        setcharBiogr(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }; \r\n\r\n    const handlecharRace = (event) => {\r\n        setcharRace(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handlecharCulture = (event) => {\r\n        setcharCulture(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handlekeySelected = (event) => {\r\n        setkeySelected(event.target.value);\r\n    }\r\n\r\n    const handleActionPoint = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: event.target.value}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue\r\n        });\r\n        if (newValue == null){\r\n            setactionAssign(count => count + actionsValues[event.target.name]);\r\n        }\r\n        else {\r\n            setactionAssign(count => count + actionsValues[event.target.name] - newValue);\r\n        };\r\n    }\r\n\r\n    const handleActionPointBond = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: Number(event.target.value) + 2}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue + 2\r\n        });\r\n        if (newValue == actionsValues[event.target.name] - 2){\r\n            setactionAssign(count => count + 1);\r\n        }\r\n        else {\r\n            setactionAssign(count => count - newValue);\r\n        };\r\n    }\r\n\r\n    const handleActionCombat = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: event.target.value}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue\r\n        });\r\n        if (newValue == null){\r\n            setcombatAction(count => count + actionsValues[event.target.name]);\r\n        }\r\n        else {\r\n            setcombatAction(count => count + actionsValues[event.target.name] - newValue);\r\n        };\r\n    }\r\n\r\n    Object.assign(selectedBond, BondsJson.default[keySelected]);\r\n    console.log(selectedBond);\r\n\r\n    const handleBondFinalName = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"BondName\"]: selectedBond.bondName} \r\n        })\r\n    }\r\n\r\n    const handleBondFinalSR = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"StressRelief\"]: selectedBond.StressRelief}\r\n        })\r\n    }\r\n    \r\n    const handleBondFinalSS = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"StressSpecial\"]: selectedBond.StressSpecial}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalHarm = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Harm\"]: selectedBond.Harm}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalStress = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Stress\"]: selectedBond.maxStress}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal1 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal1\"]: selectedBond.ideals[\"I1\"]}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal2 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal2\"]: selectedBond.ideals[\"I2\"]}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal3 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal3\"]: selectedBond.ideals[\"I3\"]}\r\n        })\r\n    }\r\n\r\n    const handleFinalNarrative = () => {\r\n        Object.assign(character.bondSelected, selectedBond);\r\n        let stringChar = JSON.stringify(character);\r\n        console.log(stringChar);\r\n        console.log(finalNarrative);\r\n\r\n        console.log(character);\r\n    }\r\n\r\n    const exportData = () => {\r\n        handleFinalNarrative();\r\n        const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(character)\r\n        )}`;\r\n        const link = document.createElement(\"a\");\r\n        link.href = jsonString;\r\n        link.download = \"ctype_\"+character.charName+\".json\";\r\n        link.click();\r\n      };\r\n\r\n    for (let index = 0; index < max; index++) {\r\n        let actualBond = bondKeys[index];\r\n        var handlerBond = BondsJson.default[actualBond];\r\n        bond_component.push(\r\n            <Grid container spacing={0} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item lg={11}>\r\n                    <Box\r\n                        width=\"100%\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            '& > :not(style)': {\r\n                            m: 1,\r\n                            width: \"100%\",\r\n                            background: \"#ed8e7f\",\r\n                            height: 300,\r\n                            },\r\n                        }}\r\n                        >\r\n                        <Paper elevation={3}>\r\n                        <Box sx={{ my: 1, mx: 2, color: \"#fff\" }}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item lg={9}>\r\n                                        <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                                            {handlerBond.bondName}\r\n                                        </Typography>\r\n                                </Grid>\r\n                                <Grid item lg={3}>\r\n                                    <Chip label={\"+2 \"+handlerBond.bondBonus1} sx={{\r\n                                            bgcolor: \"#ff3865\",\r\n                                            color: \"#fff\",\r\n                                            mx: 1\r\n                                        }}/>\r\n                                    |\r\n                                    <Chip label={\"+2 \"+handlerBond.bondBonus2} sx={{\r\n                                            bgcolor: \"#ff3865\",\r\n                                            color: \"#fff\",\r\n                                            mx: 1\r\n                                        }}/>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography color=\"text.secondary\" variant=\"body2\">\r\n                            {handlerBond.bondDes}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Divider variant=\"middle\" sx={{\r\n                            bgcolor: \"rgba(0, 0, 0, 0.5)\"\r\n                        }}/>\r\n                        <Box sx={{ mx: 2, my: 1, color: \"#fff\" }}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item lg={2}>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item lg={12}>\r\n                                            <Chip label={\"Max. Stress: \"+handlerBond.maxStress} sx={{\r\n                                                bgcolor: \"#ff3865\",\r\n                                                color: \"#fff\",\r\n                                            }}/>\r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Chip label={\"Max. Harm: \"+handlerBond.Harm} sx={{\r\n                                                bgcolor: \"#ff3865\",\r\n                                                color: \"#fff\",\r\n                                            }}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <Grid container spacing={1}>\r\n                                            <Grid item>\r\n                                                <Chip label=\"Stress Relief\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">{handlerBond.StressRelief}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Chip label=\"Stress Special\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">{handlerBond.StressSpecial}</Typography>\r\n                                            </Grid>\r\n                                            \r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={6}>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I1}\r\n                                                </Typography>   \r\n                                            </Stack>                               \r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I2}\r\n                                                </Typography>   \r\n                                            </Stack>\r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I3}\r\n                                                </Typography>   \r\n                                            </Stack>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        </Paper>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item lg={1}>\r\n                    <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                        {handlerBond.bondName == selectedBond.bondName ? (\r\n                            <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                aria-label=\"vertical contained button group\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                {selectedBond[\"bondBonus1\"] == selectedBondBonus ? (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus1\"]}\r\n                                        value={selectedBond[\"bondBonus1\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        disabled\r\n                                        >\r\n                                    {selectedBond.bondBonus1}\r\n                                    </HalfBondButton>\r\n                                ) : (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus1\"]}\r\n                                        value={selectedBond[\"bondBonus1\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        >\r\n                                    {selectedBond.bondBonus1}\r\n                                    </HalfBondButton>\r\n                                )}\r\n\r\n                                {selectedBond[\"bondBonus2\"] == selectedBondBonus ? (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus2\"]}\r\n                                        value={selectedBond[\"bondBonus2\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        disabled\r\n                                        >\r\n                                    {selectedBond.bondBonus2}\r\n                                    </HalfBondButton>\r\n                                ) : (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus2\"]}\r\n                                        value={selectedBond[\"bondBonus2\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        >\r\n                                    {selectedBond.bondBonus2}\r\n                                    </HalfBondButton>\r\n                                )}\r\n                            </ButtonGroup>\r\n                        ) : (\r\n                            <BondButton \r\n                                variant=\"contained\"\r\n                                value={bondKeys[index]}\r\n                                onClick={handlekeySelected}\r\n                                >\r\n                            Seleccionar\r\n                            </BondButton>\r\n                        )}\r\n                        {tutorialValue && (\r\n                            <TutorialTooltip\r\n                                TransitionComponent={Fade}\r\n                                TransitionProps={{ timeout: 600 }}\r\n                                title={\r\n                                    <React.Fragment>\r\n                                        <Typography color=\"inherit\"><b>Seleccionar Bond y Bonus</b></Typography>\r\n                                        {\"Tras leer con detalle qué Bond deseas solo debes elegirlo, luego se te dará la opción de \"}\r\n                                        {\"elegir el Bonus a la acción que deseas darle este +2. Cabe mencionar que siempre puedes elegir\"}\r\n                                        {\"elegir otro Bond y otra acción si te arrepientes.\"}\r\n                                    </React.Fragment>\r\n                                    }\r\n                            >\r\n                                <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                            </TutorialTooltip>\r\n                        )}\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    console.log(tutorialValue);\r\n    return(\r\n        <Container maxWidth>\r\n                {/* Row  */}\r\n            <Grid container spacing={0} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                <Grid item lg={1}>\r\n                    <Grid container justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                        <Grid item>\r\n                        <TutorialTooltip\r\n                            TransitionComponent={Fade}\r\n                            TransitionProps={{ timeout: 600 }}\r\n                            title=\"Habilitar/Deshabilitar Tutorial\"\r\n                        >\r\n                            <IconFab onClick={handletutorialValue}>\r\n                                <HelpOutlineIcon />\r\n                            </IconFab>\r\n                        </TutorialTooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item lg={10}>\r\n                    <Grid container id=\"SpaceBRows\">\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                <Link\r\n                                    underline=\"hover\"\r\n                                    sx={{ \r\n                                        display: 'flex', \r\n                                        alignItems: 'center',\r\n                                        fontFamily: \"Arial\", \r\n                                        fontSize: \"1rem\", \r\n                                        letterSpacing: \"0.15008px\"}}\r\n                                    color=\"inherit\"\r\n                                    component=\"button\"\r\n                                    onClick={() => navigate(\"/valtiersystem/personajes\")}\r\n                                    >\r\n                                <PeopleIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                    Personajes\r\n                                </Link>\r\n                            {viewSelector === 1 ? (\r\n                                <Typography\r\n                                    sx={{ display: 'flex', alignItems: 'center' }}\r\n                                    color=\"text.primary\"\r\n                                    >\r\n                                    <BadgeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                    Información Basica\r\n                                </Typography>\r\n                            ) : (\r\n                                <Link\r\n                                    underline=\"hover\"\r\n                                    sx={{ \r\n                                        display: 'flex', \r\n                                        alignItems: 'center' , \r\n                                        fontFamily: \"Arial\", \r\n                                        fontSize: \"1rem\", \r\n                                        letterSpacing: \"0.15008px\"}}\r\n                                    color=\"inherit\"\r\n                                    component=\"button\"\r\n                                    onClick={() => setviewSelector(1)}\r\n                                    >\r\n                                    <BadgeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                    Información Basica\r\n                                </Link>\r\n                            )}\r\n                            {viewSelector === 2 ? (\r\n                                <Typography\r\n                                    sx={{ display: 'flex', alignItems: 'center' }}\r\n                                    color=\"text.primary\"\r\n                                    >\r\n                                    <RecordVoiceOverIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                    Narrativo\r\n                                </Typography>\r\n                            ) : (\r\n                                <Link\r\n                                    underline=\"hover\"\r\n                                    sx={{ \r\n                                        display: 'flex', \r\n                                        alignItems: 'center' , \r\n                                        fontFamily: \"Arial\", \r\n                                        fontSize: \"1rem\", \r\n                                        letterSpacing: \"0.15008px\"}}\r\n                                    color=\"inherit\"\r\n                                    component=\"button\"\r\n                                    onClick={() => setviewSelector(2)}\r\n                                    >\r\n                                    <RecordVoiceOverIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                    Narrativo\r\n                                </Link>\r\n                            )}\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n\r\n                    {viewSelector === 1 && (\r\n                \r\n                    <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                        {/* Big Row 4/12  */}\r\n                        <Grid item xs={12} lg={4}>\r\n                            <Grid container rowSpacing={3}>\r\n                                <Grid item lg={8}>\r\n                                    <Box\r\n                                        width=\"100%\"\r\n                                        sx={{\r\n                                            backgroundColor: '#e59067',\r\n                                            width: \"169px\",\r\n                                            height: \"169px\",\r\n                                            border: '1px solid #b34d3d',\r\n                                            borderRadius: 2,\r\n                                        }} \r\n                                    >\r\n                                    <img src='https://pbs.twimg.com/media/FPg9OJLakAAbFV7?format=jpg&name=4096x4096' width=\"169px\" height=\"169px\"></img>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item lg={10}>\r\n                                    <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                        {tutorialValue && (\r\n                                            <TutorialTooltip\r\n                                                TransitionComponent={Fade}\r\n                                                TransitionProps={{ timeout: 600 }}\r\n                                                title={\r\n                                                    <React.Fragment>\r\n                                                        <Typography color=\"inherit\"><b>Biografía</b></Typography>\r\n                                                        {\"Escribir una Biografía a tu personaje siempre ayuda a tener en mente \"}\r\n                                                        {\"sus vivencias e historia para manejarlo mejor, entenderlo en plenitud y \"}\r\n                                                        {\"poder interpretarlo de mejor manera. La biografía debe ser breve, pero es de \"}\r\n                                                        {\"caracter meramente opcional.\"}\r\n                                                    </React.Fragment>\r\n                                                    }\r\n                                            >\r\n                                                <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                            </TutorialTooltip>\r\n                                        )}\r\n                                        <FormControl fullWidth required>\r\n                                        <InformationTooltip onOpen={handleinfoText}>\r\n                                        <ValtierTextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Biografía\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            rows={5}\r\n                                            name=\"charBiogr\"\r\n                                            value={charBiogr}\r\n                                            onChange={handlecharBiogr}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                        </InformationTooltip>\r\n                                        </FormControl>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* Big Row 4/12  */}\r\n                        <Grid item xs={12} lg={4}>\r\n                            <Grid container rowSpacing={4}>\r\n                                <Grid item lg={12}>\r\n                                    <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                        {tutorialValue && (\r\n                                            <TutorialTooltip\r\n                                                TransitionComponent={Fade}\r\n                                                TransitionProps={{ timeout: 600 }}\r\n                                                title={\r\n                                                    <React.Fragment>\r\n                                                        <Typography color=\"inherit\"><b>Nombre Personaje</b></Typography>\r\n                                                        {\"Para iniciar debes ponerle un nombre a tu personaje, este no tiene por qué \"}\r\n                                                        {\"ser extravagante o muy trabajado, puedes pensar en uno común o en algunas \"}\r\n                                                        {\"recomendaciones. Cabe mencionar que aqui también puedes poner apellidos o \"}\r\n                                                        {\"titulos que tu personaje guste tener a la hora de ser nombrado o llamado.\"}\r\n                                                    </React.Fragment>\r\n                                                    }\r\n                                            >\r\n                                                <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                            </TutorialTooltip>\r\n                                        )}\r\n                                        <Box component=\"form\" autoComplete=\"off\">\r\n                                            <FormControl fullWidth required>\r\n                                            <InformationTooltip onOpen={handleinfoText}>\r\n                                            <ValtierTextField\r\n                                                required\r\n                                                id=\"outlined-required\"\r\n                                                label=\"Nombre de Personaje\"\r\n                                                value={charName}\r\n                                                name=\"charName\"\r\n                                                onChange={handlecharName}\r\n                                                style = {{width: 300}}\r\n                                            />\r\n                                            </InformationTooltip>\r\n                                            <FormHelperText>Colocale un nombre o apodo a tu heroe</FormHelperText>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item lg={12}>\r\n                                <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                        {tutorialValue && (\r\n                                            <TutorialTooltip\r\n                                                TransitionComponent={Fade}\r\n                                                TransitionProps={{ timeout: 600 }}\r\n                                                title={\r\n                                                    <React.Fragment>\r\n                                                        <Typography color=\"inherit\"><b>Raza/Kin</b></Typography>\r\n                                                        {\"Elige una Raza o Kin para tu personaje, esta muchas veces no tiene un impacto \"}\r\n                                                        {\"mecanico en tu personaje, pero ayuda a definir mejor su propia identidad. \"}\r\n                                                        {\"Las razas del mundo de Icon son las comunes, pero nombradas de otra forma \"}\r\n                                                        {\"no tienes que preocuparte mucho de esto, siempre puedes conversarlo con tu DM.\"}\r\n                                                    </React.Fragment>\r\n                                                    }\r\n                                            >\r\n                                                <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                            </TutorialTooltip>\r\n                                        )}\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        \r\n                                        <FormControl fullWidth required>\r\n                                        <InformationTooltip onOpen={handleinfoText}>\r\n                                        <ValtierTextField\r\n                                            required\r\n                                            id=\"outlined-required\"\r\n                                            label=\"Raza/Kin\"\r\n                                            \r\n                                            value={charRace}\r\n                                            name=\"charRace\"\r\n                                            onChange={handlecharRace}\r\n                                            style = {{width: 300}}\r\n                                        />\r\n                                        </InformationTooltip>\r\n                                        <FormHelperText>Ingrese la Raza/Kin de su personaje</FormHelperText>\r\n                                        </FormControl>\r\n                                        \r\n                                    </Box>\r\n                                </Stack>\r\n                                </Grid>\r\n                                <Grid item lg={12}>\r\n                                <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                        {tutorialValue && (\r\n                                            <TutorialTooltip\r\n                                                TransitionComponent={Fade}\r\n                                                TransitionProps={{ timeout: 600 }}\r\n                                                title={\r\n                                                    <React.Fragment>\r\n                                                        <Typography color=\"inherit\"><b>Cultura</b></Typography>\r\n                                                        {\"Elegir una cultura nos da tanto una forma de definir mejor la narrativa de nuestro personaje \"}\r\n                                                        {\"cómo una ayuda mecanica, pues la cultura da ciertos bonus a ciertas acciones. Puedes elegir \"}\r\n                                                        {\"una cultura solo basandote en los beneficios que trae o en su historia, cualquiera es \"}\r\n                                                        {\"bienvenida.\"}\r\n                                                    </React.Fragment>\r\n                                                    }\r\n                                            >\r\n                                                <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                            </TutorialTooltip>\r\n                                        )}\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Cultura</InputLabel>\r\n                                        <InformationTooltip onOpen={handleinfoText}>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            className=\"Select\"\r\n                                            id=\"charCulture\"\r\n                                            value={charCulture}\r\n                                            label=\"Cultura\"\r\n                                            name=\"charCulture\"\r\n                                            onChange={handlecharCulture}\r\n                                            style = {{width: 300}}\r\n                                        >\r\n                                        <MenuItem value={\"Yeokin\"}>Yeokin</MenuItem>\r\n                                        <MenuItem value={\"Islander\"}>Islander</MenuItem>\r\n                                        <MenuItem value={\"Leggio\"}>Leggio</MenuItem>\r\n                                        <MenuItem value={\"Churner\"}>Churner</MenuItem>\r\n                                        <MenuItem value={\"Chronicler\"}>Chronicler</MenuItem>\r\n                                        <MenuItem value={\"Guilder\"}>Guilder</MenuItem>\r\n                                        <MenuItem value={\"Other...\"}>Other...</MenuItem>\r\n                                        </Select>\r\n                                        </InformationTooltip>\r\n                                        <FormHelperText>Escoga la cultura que posee su personaje</FormHelperText>\r\n                                    </FormControl>\r\n                                </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* Big Row 4/12  */}\r\n                        <Grid item lg={4}>\r\n                            <Grid container rowSpacing={4}>\r\n                                <Grid item lg={12} sx={{ display: { xs: 'none', lg: 'block'}}}>\r\n                                    <Box\r\n                                        width=\"100%\"\r\n                                        sx={{\r\n                                            backgroundColor: '#d45b47',\r\n                                            width: \"100%\",\r\n                                            height: \"280px\",\r\n                                            border: '1px solid #b34d3d',\r\n                                            borderRadius: 2,\r\n                                        }}    \r\n                                    >\r\n                                        <div>{infoText}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item lg={12}>\r\n                                        <ConverterButton \r\n                                            variant=\"contained\"\r\n                                            value={2}\r\n                                            onClick={() => setviewSelector(2)}\r\n                                            >\r\n                                        Siguiente\r\n                                        </ConverterButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    )}\r\n\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                {tutorialValue && (\r\n                                    <TutorialTooltip\r\n                                        TransitionComponent={Fade}\r\n                                        TransitionProps={{ timeout: 600 }}\r\n                                        title={\r\n                                            <React.Fragment>\r\n                                                <Typography color=\"inherit\"><b>Bonds</b></Typography>\r\n                                                {\"Elegir un Bond es parte importante de crear un Personaje, ya que estos son los que te darán \"}\r\n                                                {\"tanto una ayuda enorme en el enfoque de la narrativa de tu personaje, cómo en las aptitudes \"}\r\n                                                {\"tecnicas del mismo. Un Bond te provee de un Bonus a ciertas acciones, los ideales de tu personaje \"}\r\n                                                {\"(que ayudan a ganar más experiencia si los cumples durante una sesión) y la cantidad de 'Daño Narrativo' \"}\r\n                                                {\"y Estrés que puede soportar un personaje antes de sufrir algunos efectos negativos o positivos.\"}\r\n                                            </React.Fragment>\r\n                                            }\r\n                                    >\r\n                                        <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                    </TutorialTooltip>\r\n                                )}\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">Lista de Bonds</Typography>\r\n                            </Grid>\r\n                            </Stack>\r\n                            {bond_component}\r\n                        </Grid>\r\n                    )}\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item lg={4} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                {tutorialValue && (\r\n                                    <TutorialTooltip\r\n                                        TransitionComponent={Fade}\r\n                                        TransitionProps={{ timeout: 600 }}\r\n                                        title={\r\n                                            <React.Fragment>\r\n                                                <Typography color=\"inherit\"><b>Acciones</b></Typography>\r\n                                                {\"Para poder realizar una tarea o acción que puede tener un efecto que puede o no salir mal \"}\r\n                                                {\"(Saltar un acantilado, mentirle a la policía, etc...) se piden 'Rols de Acción'. Estos tienen diferentes \"}\r\n                                                {\"situaciones donde son usados y son necesarios para saber la cantidad de dados que debes lanzar para que, con el \"}\r\n                                                {\"numero que obtengas, el DM te de una respuesta a si tu acción fue o no exitosa y con qué consecuencias. \"}\r\n                                                {\"A continuación se listan las acciones a elegir, puedes distribuir hasta 4 puntos entre ellas con un maximo \"}\r\n                                                {\"de 3 por ahora (toda acción llega hasta 5 puntos).\"}\r\n                                                \r\n                                            </React.Fragment>\r\n                                            }\r\n                                    >\r\n                                        <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                    </TutorialTooltip>\r\n                                )}\r\n                                <Typography variant=\"h4\">Acciones Narrativas</Typography>\r\n                            </Stack>\r\n                            </Grid>\r\n                            <Grid item lg ={8}  justifyContent=\"center\" alignItems=\"center\">\r\n                                <Chip label={\"Puntos de Acción Restantes: \"+actionAssign} sx={{ bgcolor: \"#ff3865\", color: \"#fff\", mx: 1 }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            {actions.map(\r\n                                (action) => action == selectedBondBonus ? (\r\n                                    <Grid item xs={6} lg={4}>\r\n                                        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                            {tutorialValue && (\r\n                                                <TutorialTooltip\r\n                                                    TransitionComponent={Fade}\r\n                                                    TransitionProps={{ timeout: 600 }}\r\n                                                    title={\r\n                                                        <React.Fragment>\r\n                                                            <Typography color=\"inherit\"><b>{action}</b></Typography>\r\n                                                            {action_des[action]}\r\n                                                        </React.Fragment>\r\n                                                        }\r\n                                                >\r\n                                                    <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                                </TutorialTooltip>\r\n                                            )}\r\n                                        <Typography component=\"legend\">{action}</Typography>\r\n                                        </Stack>\r\n                                        <Stack direction=\"row\" spacing={0}>\r\n                                            <StyledRating\r\n                                                name={action}\r\n                                                defaultValue={2}\r\n                                                precision={1}\r\n                                                disabled\r\n                                                max={2}\r\n                                                icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                                emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                            />\r\n                                            <StyledRating\r\n                                                name={action}\r\n                                                defaultValue={0}\r\n                                                value={actionsValues[action]}\r\n                                                precision={1}\r\n                                                max={1}\r\n                                                onChange={handleActionPointBond}\r\n                                                icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                                emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                ) : (\r\n                                    <Grid item xs={6} lg={4}>\r\n                                        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                            {tutorialValue && (\r\n                                                <TutorialTooltip\r\n                                                    TransitionComponent={Fade}\r\n                                                    TransitionProps={{ timeout: 600 }}\r\n                                                    title={\r\n                                                        <React.Fragment>\r\n                                                            <Typography color=\"inherit\"><b>{action}</b></Typography>\r\n                                                            {action_des[action]}\r\n                                                        </React.Fragment>\r\n                                                        }\r\n                                                >\r\n                                                    <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                                </TutorialTooltip>\r\n                                            )}\r\n                                        <Typography component=\"legend\">{action}</Typography>\r\n                                        </Stack>\r\n                                        <StyledRating\r\n                                            name={action}\r\n                                            defaultValue={0}\r\n                                            value={actionsValues[action]}\r\n                                            precision={1}\r\n                                            max={3}\r\n                                            onChange={handleActionPoint}\r\n                                            icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                            emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            )}\r\n                        </Grid>\r\n                    )}\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item lg={4} justifyContent=\"center\" alignItems=\"center\">\r\n                                <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                    {tutorialValue && (\r\n                                        <TutorialTooltip\r\n                                            TransitionComponent={Fade}\r\n                                            TransitionProps={{ timeout: 600 }}\r\n                                            title={\r\n                                                <React.Fragment>\r\n                                                    <Typography color=\"inherit\"><b>Acciones de Combate Narrativo</b></Typography>\r\n                                                    {\"El combate Narrativo es uno que se utiliza cuando el DM o la mesa no tendrá combate detallado mecanico, \"}\r\n                                                    {\"esto usualmente ocurra en mesas donde el enfoque es meramente narrativo, por lo que se tienen 3 acciones \"}\r\n                                                    {\"que tienen las 3 formas generales de tener un combate, a larga distancia, a corta distancia contra muchos \"}\r\n                                                    {\"enemigos y a corta distancia contra un enemigo muy poderoso. Para estas acciones se deben distribuir \"}\r\n                                                    {\"2, 1 y 0 puntos entre las 3, recordar que esto es solo para cuando estamos creando al personaje.\"}\r\n                                                    \r\n                                                    \r\n                                                </React.Fragment>\r\n                                                }\r\n                                        >\r\n                                            <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                        </TutorialTooltip>\r\n                                    )}\r\n                                    <Typography variant=\"h4\">Acciones de Combate Narrativo</Typography>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item lg ={8}  justifyContent=\"center\" alignItems=\"center\">\r\n                                <Chip label={\"Asignar 2, 1 y 0 puntos a las acciones\"} sx={{ bgcolor: \"#ff3865\", color: \"#fff\", mx: 1 }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            {combatAction.map(\r\n                                (action) => (\r\n                                    <Grid item xs={6} lg={4}>\r\n                                        <Stack direction=\"row\" spacing={1} justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                                            {tutorialValue && (\r\n                                                <TutorialTooltip\r\n                                                    TransitionComponent={Fade}\r\n                                                    TransitionProps={{ timeout: 600 }}\r\n                                                    title={\r\n                                                        <React.Fragment>\r\n                                                            <Typography color=\"inherit\"><b>{action}</b></Typography>\r\n                                                            {action_des[action]}\r\n                                                        </React.Fragment>\r\n                                                        }\r\n                                                >\r\n                                                    <InfoIcon sx={{ color: \"#ff3865\"}}/>\r\n                                                </TutorialTooltip>\r\n                                            )}\r\n                                        <Typography component=\"legend\">{action}</Typography>\r\n                                        </Stack>\r\n                                        <StyledRating\r\n                                            name={action}\r\n                                            defaultValue={0}\r\n                                            value={actionsValues[action]}\r\n                                            precision={1}\r\n                                            max={2}\r\n                                            onChange={handleActionCombat}\r\n                                            icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                            emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                        />\r\n                                    </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    )}\r\n                    {viewSelector === 2 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Grid item lg={4}>\r\n                                <ClickedButton variant=\"contained\" onClick={exportData}>Guardar Personaje Narrativo</ClickedButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n                <Grid item lg={1}>\r\n                    <Box width=\"100%\"></Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CharCreator;","import './App.css';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef} from \"react\";\r\nimport { logout } from './redux/actions/loginActions.js';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Home from './views/Home.js';\r\nimport Compendio from './views/Compendio.js';\r\nimport Navigation from './views/Navigation.js';\r\nimport Footer from './views/Footer.js';\r\nimport Body from './views/Body.js';\r\nimport Personajes from './views/Personajes.js';\r\nimport Campana from './views/Campana.js';\r\nimport Convertidor from './views/Convertidor.js';\r\nimport CharCreator from './views/CharCreator.js';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nexport const useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowSize;\r\n}\r\n\r\nexport const componentWindow = () => {\r\n  const refContainer = useRef();\r\n  const [dimensions, setDimensions] = \r\n    useState({ width: 0, height: 0 });\r\n  useEffect(() => {\r\n    if (refContainer.current) {\r\n      setDimensions({\r\n        width: refContainer.current.offsetWidth,\r\n        height: refContainer.current.offsetHeight,\r\n      });\r\n    }\r\n  }, []);\r\n  return dimensions;\r\n}\r\n\r\nconst FooterButton = styled(Button)(({ theme }) => ({\r\n    borderRadius: 35,\r\n    borderColor: \"#ff3865\",\r\n    color: \"#ff3865\",\r\n    '&:hover': {\r\n        backgroundColor: '#72002d',\r\n        borderColor: \"#ff3865\",\r\n    },\r\n  }));\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n\r\n  const handleLogout = (e) => {\r\n    dispatch(logout());\r\n  }\r\n\r\n  console.log(isLogged);\r\n\r\n  return (\r\n    <div id='Main'>\r\n        <Router>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                minHeight: '100vh',\r\n            }}\r\n            >\r\n            <Navigation />\r\n            <Box sx={{\r\n                    m: 4,\r\n                }}>\r\n            <Routes>\r\n                <Route path='/valtiersystem/' element={<Body loginstate={isLogged}/>}/>\r\n                <Route path='/valtiersystem/compendio' element={<Compendio/>}/>\r\n                <Route path='/valtiersystem/creador' element={<Convertidor/>}/>\r\n                <Route path='/valtiersystem/personajes' element={<Personajes/>}/>\r\n            <Route path='/valtiersystem/characterCreator' element={<CharCreator/>}/>\r\n            </Routes>\r\n            </Box>\r\n          <Box\r\n            component=\"footer\"\r\n            id=\"Footer\"\r\n            sx={{\r\n              py: 3,\r\n              px: 2,\r\n              mt: 'auto',\r\n            }}\r\n          >\r\n            <Container maxWidth>\r\n                <Grid container spacing={12} rowSpacing={4} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item lg={4} xs={12}>\r\n                        <Link as={Link} to='/valtiersystem/'>\r\n                            <img src='https://i.imgur.com/zT7pALd.png' width={200} alt='Valtierlogo'/>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item lg={4} xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Link as={Link} to=\"/valtiersystem/compendio\">\r\n                                    <FooterButton variant=\"outlined\">Compendio</FooterButton>\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Link as={Link} to=\"/valtiersystem/personajes\">\r\n                                <FooterButton variant=\"outlined\">Personajes</FooterButton>\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Link as={Link} to=\"/valtiersystem/creador\">\r\n                                    <FooterButton variant=\"outlined\">Creador de Contenido</FooterButton>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item lg={4} xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6} lg={12}>\r\n                                <Stack direction=\"row\" spacing={2} justifyContent=\"flex-start\" alignItems=\"center\">\r\n                                    <IconButton href=\"https://www.instagram.com/butcherz0ne/\" target=\"_blank\">\r\n                                        <Avatar alt=\"ButcherZone\" src=\"https://i.imgur.com/IespCJd.jpg\"/>\r\n                                    </IconButton>\r\n                                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Art Designer</Typography>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={12}>\r\n                                <Stack direction=\"row\" spacing={2} justifyContent=\"flex-start\" alignItems=\"center\">\r\n                                    <IconButton href=\"https://www.instagram.com/the_fox_cross/\" target=\"_blank\">\r\n                                        <Avatar alt=\"CrossFox\" src=\"https://i.imgur.com/Qp74HFk.jpg\"/>\r\n                                    </IconButton>\r\n                                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Web Programmer</Typography>\r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n          </Box>\r\n        </Box>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    isLogged: localStorage.getItem('token') ? true : false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    if(action.type){\r\n        return {\r\n            ...state,\r\n            ...action.payload,\r\n        };\r\n    } else{\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport authReducer from './reducers/loginReducers.js';\r\n\r\nconst appReducer = combineReducers({\r\n    authReducer: authReducer,\r\n})\r\n\r\nexport default createStore(appReducer);","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}