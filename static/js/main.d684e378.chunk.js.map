{"version":3,"sources":["views/Navigation.js","views/Footer.js","views/Body.js","views/Compendio.js","views/Home.js","views/Personajes.js","views/Convertidor.js","views/CharCreator.js","App.js","redux/reducers/loginReducers.js","redux/store.js","index.js"],"names":["settings","Navigation","loginstate","_React$useState","React","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","isLogged","useDispatch","useSelector","store","authReducer","handleCloseUserMenu","react","Container","maxWidth","id","Box","Grid","container","spacing","item","xs","react_router_dom","as","Link","to","src","width","alt","Tooltip","title","IconButton","onClick","event","currentTarget","Avatar","sx","height","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","setting","MenuItem","key","Typography","textAlign","Footer","size","useWindowSize","newWindowSIze","Math","abs","console","log","justifyContent","alignItems","sm","Button","variant","startIcon","Person_default","a","href","target","HugeButton","styled","_ref","theme","color","backgroundColor","maxHeight","minWidth","minHeight","&:hover","HalfHugeButton","_ref2","Body","fixed","lg","ButtonGroup","orientation","aria-label","style","fullWidth","Compendio","Stack","direction","Rating","name","value","readOnly","max","emptyIcon","Star_default","opacity","fontSize","precision","Home","ConverterButton","Personajes","Add_default","mr","ClickedButton","IconSlider","Slider","& .MuiSlider-track","border","& .MuiSlider-thumb","&:focus, &:hover, &.Mui-active, &.Mui-focusVisible","boxShadow","&:before","display","& .MuiSlider-valueLabel","lineHeight","background","padding","borderRadius","transform","&.MuiSlider-valueLabelOpen","& > *","Convertidor","dataType","setData","abilityTittle","setAbTittle","_React$useState5","_React$useState6","actionType","setActionType","_React$useState7","_React$useState8","attackType","setattackType","_React$useState9","_React$useState10","attackTypeRange","setattackTypeRange","_React$useState11","_React$useState12","attackRange","setattackRange","_React$useState13","_React$useState14","abilitytext","setabilitytext","_React$useState15","_React$useState16","aditionalAttack","setaditionalAttack","_React$useState17","_React$useState18","classType","setclassType","_React$useState19","_React$useState20","contador","setContador","_React$useState21","_React$useState22","setBPcontador","_React$useState23","_React$useState24","aoeAttackType","setaoeAttackType","_React$useState25","_React$useState26","aoeAttack","setaoeAttack","_React$useState27","_React$useState28","aoeAttackValue","setaoeAttackValue","_React$useState29","Aura","Autohit","Combo","Mark","Stance","Summon","Terrain","_React$useState30","extraAbilities","setextraAbilities","actions","componente_bp","_React$useState31","bondName","bondDes","bondBonus1","bondBonus2","ideals","I1","I2","I3","maxStress","StressRelief","StressSpecial","Harm","BondPowers","BP1","BP2","BP3","BP4","BP5","BP6","BP7","BP8","BP9","BP10","BP11","_React$useState32","bondClass","setbondClass","handleType","handleaoeAttackType","handleaoeAttackValue","handleextraAbilities","objectSpread","defineProperty","checked","handlebondClass","handleBondSubClass","handleBondPowers","bptarget","bpvalue","i","push","component","autoComplete","TextField","multiline","required","label","maxRows","rows","helperText","BPcontador","onChange","FormControl","InputLabel","Select","labelId","FormHelperText","md","Convertidor_ConverterButton","toString","InputProps","FormControlLabel","control","Checkbox","disabled","FormLabel","action","alignContent","Psychology_default","defaultValue","valueLabelDisplay","step","marks","min","Sick_default","count","AddCircle_default","ls","jsonString","concat","encodeURIComponent","JSON","stringify","link","document","createElement","download","click","BondButton","HalfBondButton","_ref3","&.Mui-disabled","InformationTooltip","_ref4","className","props","objectWithoutProperties","assign","classes","popper","_ref5","tooltipClasses","tooltip","_ref7","ValtierTextField","& .MuiOutlinedInput-root","&:hover fieldset","StyledRating","& .MuiRating-iconFilled","& .MuiRating-iconHover","CharCreator","viewSelector","setviewSelector","infoText","setinfoText","charName","setcharName","charBiogr","setcharBiogr","charRace","setcharRace","charCulture","setcharCulture","keySelected","setkeySelected","selectedBondBonus","setselectedBondBonus","actionAssign","setactionAssign","setcombatAction","bondSelected","charLevel","NarrativeChar","BondName","Sneak","Excel","Survey","Channel","Charm","Command","Tinker","Study","Recall","Traverse","Smash","Endure","Snipe","Skirmish","Crush","Stress","Ideal1","Ideal2","Ideal3","character","setCharacter","actionsValues","setactionsValues","bondKeys","keys","BondsJson","selectedBond","finalNarrative","bond_component","length","element","handleinfoText","handleselectedBondBonus","handlekeySelected","handleActionPoint","newValue","handleActionPointBond","Number","handleActionCombat","index","actualBond","handlerBond","flexWrap","& > :not(style)","m","Paper","elevation","my","mx","gutterBottom","Chip","bgcolor","Divider","Breadcrumbs","underline","People_default","Badge_default","fontFamily","letterSpacing","RecordVoiceOver_default","rowSpacing","onOpen","CharCreator_ConverterButton","icon","GpsFixed_default","LocationSearching_default","CharCreator_ClickedButton","stringChar","handleFinalNarrative","_useState","useState","undefined","_useState2","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","componentWindow","refContainer","useRef","_useState3","_useState4","dimensions","setDimensions","current","offsetWidth","offsetHeight","App","compSize","react_default","flex","views_Navigation","react_router","path","views_Body","views_Compendio","Campana_default","views_Convertidor","views_Personajes","views_CharCreator","views_Footer","initialState","localStorage","getItem","state","arguments","type","payload","appReducer","combineReducers","createStore","ReactDOM","createRoot","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.d684e378.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Grid } from '@mui/material';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nconst settings = ['Perfil', 'Backup Data', 'Cerrar Sesión'];\r\n\r\nconst Navigation = (loginstate) => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n      <Container maxWidth=\"xl\" id=\"Navigation\">\r\n        <Box>\r\n          <Grid container spacing={0}>\r\n          <Grid item xs={10}>\r\n              <Link as={Link} to='/'>\r\n                <img src='/LogoNormal.png' width={200} alt='Valtierlogo'/>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              {isLogged === false && (\r\n              <Box>\r\n                <Tooltip title=\"Open settings\">\r\n                  <IconButton onClick={handleOpenUserMenu}>\r\n                    <Avatar \r\n                      alt=\"Remy Sharp\" \r\n                      src=\"/static/images/avatar/2.jpg\" \r\n                      sx={{ width: 65, height: 65 }}\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  sx={{ mt: '45px' }}\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorElUser}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleCloseUserMenu}\r\n                >\r\n                {settings.map((setting) => (\r\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\">{setting}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>)}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    \r\n  );\r\n};\r\n\r\nexport default Navigation;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { useWindowSize } from './../App.js';\r\n\r\nconst Footer = (loginstate) => {\r\n\r\n    const size = useWindowSize();\r\n    \r\n    const newWindowSIze = Math.abs(573 - size.height);\r\n    console.log(size);\r\n    console.log(newWindowSIze);\r\n\r\n    return(\r\n            <Box id='Footer' sx={{\r\n                //paddingTop: newWindowSIze+\"px\",\r\n            }}>\r\n                <Container maxWidth='lg' >\r\n                    <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Button id=\"Button1\" variant=\"contained\" size=\"small\" startIcon={<PersonIcon/>}>Registrarse</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            Datos Generales\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <IconButton href=\"https://www.instagram.com/butcherz0ne/\" target=\"_blank\">\r\n                                <Avatar alt=\"ButcherZone\" src=\"/LizheruPic.jpg\"/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Box>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\n\r\nconst HugeButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '360px', \r\n    maxHeight: '360px', \r\n    minWidth: '360px', \r\n    minHeight: '360px',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n  }));\r\n  \r\n  const HalfHugeButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '360px', \r\n    maxHeight: '180px', \r\n    minWidth: '360px', \r\n    minHeight: '179px',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n  }));\r\n\r\nconst Body = (loginstate) => {\r\n    return(\r\n        <Box id=\"Body\">\r\n            <Container fixed>\r\n                <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={6} lg={4}>\r\n                        <Link as={Link} to=\"/compendio\">\r\n                            <HugeButton variant=\"contained\">Compendio</HugeButton>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item xs={6} lg={4}>\r\n                        <Link as={Link} to=\"/personajes\">\r\n                            <HugeButton variant=\"contained\">Personajes</HugeButton>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={4}>\r\n                        \r\n                        <ButtonGroup\r\n                            variant=\"contained\"\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical outlined button group\"\r\n                            style={{\r\n                                width: '360px', \r\n                            }}\r\n                            fullWidth\r\n                            >\r\n                            <Link as={Link} to=\"/campana\" id='LinkDesign'>\r\n                                <HalfHugeButton variant=\"contained\" id='GroupButtons'>Campaña</HalfHugeButton>\r\n                            </Link>\r\n                            <Link as={Link} to=\"/convertidor\" id='LinkDesign'>\r\n                                <HalfHugeButton variant=\"contained\" id='GroupButtons'>Convertidor</HalfHugeButton>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>  \r\n    );\r\n}\r\n\r\nexport default Body;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Stack from '@mui/material/Stack';\r\nimport Rating from '@mui/material/Rating';\r\nimport StarIcon from '@mui/icons-material/Star';\r\n\r\nconst Compendio = () => {\r\n    const value = 2;\r\n    const initValue= 0;\r\n    return(\r\n            <Container maxWidth='lg' >\r\n                <Grid container>\r\n                    <Grid item>\r\n                    <Stack direction=\"row\" spacing={0}>\r\n                        <Rating\r\n                            name=\"text-feedback\"\r\n                            value={value}\r\n                            readOnly\r\n                            max={2}\r\n                            emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                        />\r\n                        <Rating\r\n                            name=\"text-feedback\"\r\n                            value={initValue}\r\n                            precision={1}\r\n                            emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                        />\r\n                    </Stack>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default Compendio;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nimport Navigation from './../views/Navigation.js';\r\nimport Footer from './../views/Footer.js';\r\nimport Body from './../views/Body.js';\r\nimport Compendio from './../views/Compendio.js';\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n\r\n\r\n  console.log(isLogged);\r\n\r\n  return (\r\n        <Grid container rowSpacing={3} flex>\r\n            <Grid item xs={12}>\r\n                <Navigation loginstate={isLogged}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Routes>\r\n                    <Route path='/' element={<Body loginstate={isLogged}/>}/>\r\n                    <Route path='/compendio' element={<Compendio/>}/>\r\n                </Routes>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n             <Footer loginstate={isLogged}/>\r\n            </Grid>\r\n        </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport GrainIcon from '@mui/icons-material/Grain';\r\n\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Personajes = () => {\r\n    return(\r\n        <Container maxWidth='lg' >\r\n            <Grid container spacing={0} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} lg={12}>\r\n                    {/* Aqui vamos a colocar un Map con TODOS los personajes que hay*/}\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                    <Link as={Link} to=\"/characterCreator\">\r\n                        <ConverterButton variant=\"contained\">\r\n                            <AddIcon sx={{ mr: 0.5 }} fontSize=\"inherit\"/>\r\n                            Nuevo Personaje\r\n                        </ConverterButton>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Personajes;","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Slider from '@mui/material/Slider';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport SickIcon from '@mui/icons-material/Sick';\r\nimport PsychologyIcon from '@mui/icons-material/Psychology';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom';\r\nimport { sizeHeight } from '@mui/system';\r\nimport { useWindowSize } from './../App.js';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst ClickedButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#ff3865',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#9c233f',\r\n    },\r\n}));\r\n\r\nconst IconSlider = styled(Slider)({\r\n  color: '#ff3865',\r\n  height: 8,\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    height: 24,\r\n    width: 24,\r\n    border: '2px solid currentColor',\r\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n      boxShadow: 'inherit',\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  '& .MuiSlider-valueLabel': {\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    background: 'unset',\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    borderRadius: '50% 50% 50% 0',\r\n    backgroundColor: '#95223c',\r\n    transformOrigin: 'bottom left',\r\n    transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\r\n    '&:before': { display: 'none' },\r\n    '&.MuiSlider-valueLabelOpen': {\r\n      transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',\r\n    },\r\n    '& > *': {\r\n      transform: 'rotate(45deg)',\r\n    },\r\n  },\r\n});\r\n  \r\n\r\nconst Convertidor = (loginstate) => {\r\n\r\n    const [dataType, setData] = React.useState('');\r\n    const [abilityTittle, setAbTittle] = React.useState('');\r\n    const [actionType, setActionType] = React.useState('');\r\n    const [attackType, setattackType] = React.useState('');\r\n    const [attackTypeRange, setattackTypeRange] = React.useState('');\r\n    const [attackRange, setattackRange] = React.useState('');\r\n    const [abilitytext, setabilitytext] = React.useState('');\r\n    const [aditionalAttack, setaditionalAttack] = React.useState('');\r\n    const [classType, setclassType] = React.useState('');\r\n    const [contador, setContador] = React.useState(0);\r\n    const [BPcontador, setBPcontador] = React.useState(0);\r\n    const [aoeAttackType, setaoeAttackType] = React.useState('');\r\n    const [aoeAttack, setaoeAttack] = React.useState(true);\r\n    const [aoeAttackValue, setaoeAttackValue] = React.useState('');\r\n    const [extraAbilities, setextraAbilities] = React.useState({\r\n        Aura: false,\r\n        Autohit: false,\r\n        Combo: false,\r\n        Mark: false,\r\n        Stance: false,\r\n        Summon: false,\r\n        Terrain: false,\r\n    });\r\n    const { Aura, Autohit, Combo, Mark, Stance, Summon, Terrain } = extraAbilities;\r\n    const actions = [\"Sneak\", \"Traverse\", \"Survey\", \"Study\", \"Charm\", \"Command\", \"Tinker\", \"Excel\", \"Smash\", \"Endure\", \"Channel\", \"Recall\"];\r\n\r\n    let componente_bp = [];\r\n\r\n    const [bondClass, setbondClass] = React.useState({\r\n        bondName: \"\",\r\n        bondDes: \"\",\r\n        bondBonus1: \"\",\r\n        bondBonus2: \"\",\r\n        ideals:{\r\n            I1: \"\",\r\n            I2: \"\",\r\n            I3: \"\"\r\n            },\r\n        maxStress: 1,\r\n        StressRelief: \"\",\r\n        StressSpecial: \"\",\r\n        Harm: 1,\r\n        BondPowers: {\r\n            BP1: \"\", BP2: \"\", BP3: \"\", BP4: \"\", BP5: \"\", BP6: \"\", BP7: \"\", BP8: \"\",\r\n            BP9: \"\", BP10: \"\", BP11: \"\"\r\n            \r\n        }\r\n    });\r\n    \r\n    const size = useWindowSize();\r\n\r\n    const handleType = (event) => {\r\n        setData(event.target.value);\r\n    };\r\n\r\n    const handleAbTittle = (event) => {\r\n        setAbTittle(event.target.value);\r\n    };\r\n\r\n    const handleActionType = (event) => {\r\n        setActionType(event.target.value);\r\n    };\r\n\r\n    const handleattackType = (event) => {\r\n        setattackType(event.target.value);\r\n    }\r\n\r\n    const handleattackTypeRange = (event) => {\r\n        setattackTypeRange(event.target.value);\r\n    }\r\n\r\n    const handleattackRange = (event) => {\r\n        setattackRange(event.target.value);\r\n    }\r\n\r\n    const handleabilitytext = (event) => {\r\n        setabilitytext(event.target.value);\r\n    }\r\n\r\n    const handleaditionalAttack = (event) => {\r\n        setaditionalAttack(event.target.value);\r\n    }\r\n\r\n    const handleclassType = (event) => {\r\n        setclassType(event.target.value)\r\n    }\r\n\r\n    const handleUpContador = () => {\r\n        setContador(count => count + 1);\r\n        setBPcontador(\"BP\"+(contador+1));\r\n    }\r\n\r\n    const handleResetContador = () => {\r\n        setContador(0)\r\n    }\r\n\r\n    const handleaoeAttack = (event) => {\r\n        setaoeAttack(event.target.checked)\r\n    }\r\n\r\n    const handleaoeAttackType = (event) => {\r\n        setaoeAttackType(event.target.value)\r\n    }\r\n\r\n    const handleaoeAttackValue = (event) => {\r\n        setaoeAttackValue(event.target.value)\r\n    }\r\n\r\n    const handleextraAbilities = (event) => {\r\n        setextraAbilities({\r\n            ...extraAbilities,\r\n            [event.target.name]: event.target.checked\r\n        })\r\n    }\r\n\r\n    const handlebondClass = (event) => {\r\n        setbondClass({\r\n            ...bondClass,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleBondSubClass = (event) => {\r\n        setbondClass({\r\n            ...bondClass,\r\n            [\"ideals\"]: {...bondClass.ideals, [event.target.name]: event.target.value}\r\n        });\r\n    }\r\n\r\n    const handleBondPowers = (event) => {\r\n        let bptarget = event.target.name;\r\n        let bpvalue = event.target.value;\r\n        setbondClass({\r\n            ...bondClass,\r\n            [\"BondPowers\"]: \r\n                {...bondClass.BondPowers, [bptarget]: bpvalue\r\n            }\r\n        });\r\n    }\r\n\r\n    const exportData = () => {\r\n        const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(bondClass)\r\n        )}`;\r\n        const link = document.createElement(\"a\");\r\n        link.href = jsonString;\r\n        link.download = \"btype_\"+bondClass.bondName+\".json\";\r\n        link.click();\r\n      };\r\n\r\n    for (let i = 1; i <= contador; i++) {\r\n        if (i == 11) {\r\n            componente_bp.push(\r\n                <Grid item xs={12} lg={6}>\r\n                    <Box component=\"form\" autoComplete=\"off\">\r\n                        <TextField\r\n                            id=\"filled-multiline-flexible\"\r\n                            fullWidth\r\n                            multiline \r\n                            required\r\n                            label={\"Gambit Name\"}\r\n                            maxRows={2}\r\n                            rows={2}\r\n                            name={\"BP\"+i}\r\n                            helperText=\"Nombre del Gambito - Poderes Requeridos - Descripción\"\r\n                            value={bondClass.BondPowers.BPcontador}\r\n                            onChange={handleBondPowers}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            )\r\n        }\r\n        else {\r\n            componente_bp.push(\r\n                <Grid item xs={12} lg={12}>\r\n                    <Box component=\"form\" autoComplete=\"off\">\r\n                        <TextField\r\n                            id=\"filled-multiline-flexible\"\r\n                            fullWidth\r\n                            multiline  \r\n                            required\r\n                            maxRows={2}\r\n                            rows={2}\r\n                            label={\"Bond Power \"+i}\r\n                            name={\"BP\"+i}\r\n                            helperText=\"NombreBondPower - opcional(Veces Por sesión) - Descripción\"\r\n                            value={bondClass.BondPowers.BPcontador}\r\n                            onChange={handleBondPowers}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Box id=\"Body\">\r\n            <Container fixed>\r\n                {size.width <= 640 ? (\r\n                    <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\" id=\"SpaceBRows\">\r\n                        <Grid item xs={12} lg={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel id=\"demo-simple-select-label\">Tipo de Dato</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={dataType}\r\n                                    label=\"Tipo de Dato\"\r\n                                    onChange={handleType}\r\n                                >\r\n                                <MenuItem value={1}>Habilidad</MenuItem>\r\n                                <MenuItem value={2}>Trait</MenuItem>\r\n                                <MenuItem value={3}>Limit Breaker</MenuItem>\r\n                                <MenuItem value={4}>Bond</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText>Escoja el tipo de Dato a Convertir</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                ) : (\r\n                    <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\" id=\"SpaceBRows\">\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 1 ? (\r\n                                <ClickedButton variant=\"contained\" value={1} onClick={handleType}>Habilidad</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={1} onClick={handleType}>Habilidad</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 2 ? (\r\n                                <ClickedButton variant=\"contained\" value={2} onClick={handleType}>Trait</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={2} onClick={handleType}>Trait</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 3 ? (\r\n                                <ClickedButton variant=\"contained\" value={3} onClick={handleType}>Limit Breaker</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={3} onClick={handleType}>Limit Breaker</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} xs={3} sm={3}>\r\n                            {dataType == 4 ? (\r\n                                <ClickedButton variant=\"contained\" value={4} onClick={handleType}>Bond Power</ClickedButton>\r\n                            ) : (\r\n                                <ConverterButton variant=\"contained\" value={4} onClick={handleType}>Bond Power</ConverterButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n\r\n                {/*----------------------------------------------Tipo Convertidor (HABILIDAD)--------------------------------------*/}\r\n                \r\n                    {dataType == 1 && (\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} lg={4}>\r\n                                <Box component=\"form\" autoComplete=\"off\">\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        required\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"Nombre Habilidad\"\r\n                                        helperText=\"Dale un nombre interesante a tu poder\"\r\n                                        multiline\r\n                                        maxRows={4}\r\n                                        value={abilityTittle}\r\n                                        onChange={handleAbTittle}\r\n                                    />\r\n                                    <div>{abilityTittle}</div>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Tipo de Acción</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={actionType}\r\n                                        label=\"Tipo de Acción\"\r\n                                        onChange={handleActionType}\r\n                                    >\r\n                                    <MenuItem value={1}>Ataque</MenuItem>\r\n                                    <MenuItem value={2}>Acción</MenuItem>\r\n                                    <MenuItem value={3}>Interrupt</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>Selecciona la naturaleza de tu Habilidad</FormHelperText>\r\n                                    <div>{actionType}</div>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        \r\n                        \r\n                            {/*-----------------Tipo Habilidad (ATAQUE)----------------------------------------------------*/}\r\n\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={attackType}\r\n                                            label=\"Tipo de Ataque\"\r\n                                            onChange={handleattackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Light</MenuItem>\r\n                                        <MenuItem value={2}>Heavy</MenuItem>\r\n                                        <MenuItem value={3}>SuperHeavy</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Selecciona el poder de tu Ataque</FormHelperText>\r\n                                        <div>{attackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={2}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Melee o Rango</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={attackTypeRange}\r\n                                            label=\"Melee o Rango\"\r\n                                            onChange={handleattackTypeRange}\r\n                                        >\r\n                                        <MenuItem value={1}>Melee</MenuItem>\r\n                                        <MenuItem value={2}>Range</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText></FormHelperText>\r\n                                        <div>{attackTypeRange}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={2}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            required\r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de Ataque\"\r\n                                            helperText=\"El Numero de Casillas que abarca el ataque\"\r\n                                            value={attackRange}\r\n                                            onChange={handleattackRange}\r\n                                        />\r\n                                        <div>{attackRange}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={2} lg={1}>\r\n                                    <TextField\r\n                                        id=\"outlined-read-only-input\"\r\n                                        label=\"Daño\"\r\n                                        value={attackType.toString()+\"[D]\"}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={10} lg={3}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Adicional al Daño Base\"\r\n                                            helperText=\"Escribe los efectos y daños adicionales o calculos diferentes\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={aditionalAttack}\r\n                                            onChange={handleaditionalAttack}\r\n                                        />\r\n                                        <div>{aditionalAttack}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={aoeAttack} onChange={handleaoeAttack} name=\"Ataque En Area\" />\r\n                                        }\r\n                                        label=\"Ataque En Area\"\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == true && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque en Area</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={aoeAttackType}\r\n                                            label=\"Tipo de Ataque en Area\"\r\n                                            onChange={handleaoeAttackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Line</MenuItem>\r\n                                        <MenuItem value={2}>Blast</MenuItem>\r\n                                        <MenuItem value={3}>Close Blast</MenuItem>\r\n                                        <MenuItem value={4}>Arc</MenuItem>\r\n                                        <MenuItem value={5}>Cross</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Elige de qué modo hace daño en area tu ataque</FormHelperText>\r\n                                        <div>{aoeAttackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == false && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl fullWidth disabled>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Tipo de Ataque en Area</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={aoeAttackType}\r\n                                            label=\"Tipo de Ataque en Area\"\r\n                                            onChange={handleaoeAttackType}\r\n                                        >\r\n                                        <MenuItem value={1}>Line</MenuItem>\r\n                                        <MenuItem value={2}>Blast</MenuItem>\r\n                                        <MenuItem value={3}>Close Blast</MenuItem>\r\n                                        <MenuItem value={4}>Arc</MenuItem>\r\n                                        <MenuItem value={5}>Cross</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Elige de qué modo hace daño en area tu ataque</FormHelperText>\r\n                                        <div>{aoeAttackType}</div>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == true && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de AOE\"\r\n                                            helperText=\"Rango del Area de Efecto\"\r\n                                            value={aoeAttackValue}\r\n                                            onChange={handleaoeAttackValue}\r\n                                        />\r\n                                        <div>{aoeAttackValue}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            {aoeAttack == false && actionType == 1 && (\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Box component=\"form\" autoComplete=\"off\">\r\n                                        <TextField\r\n                                            disabled\r\n                                            fullWidth \r\n                                            id=\"outlined-multiline-flexible\"\r\n                                            label=\"Rango de AOE\"\r\n                                            helperText=\"Rango del Area de Efecto\"\r\n                                            value={aoeAttackValue}\r\n                                            onChange={handleaoeAttackValue}\r\n                                        />\r\n                                        <div>{aoeAttackValue}</div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item xs={12} lg={8}>\r\n                                <TextField\r\n                                    id=\"filled-multiline-flexible\"\r\n                                    label=\"Descripción de Efectos\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    helperText=\"Describe tu habilidad con detalle, recuerda utilizar las Palabras Reservadas\"\r\n                                    maxRows={4}\r\n                                    value={abilitytext}\r\n                                    onChange={handleabilitytext}\r\n                                    variant=\"filled\"\r\n                                />\r\n                            </Grid>\r\n                           <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Clase</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={classType}\r\n                                        label=\"Clase\"\r\n                                        onChange={handleclassType}\r\n                                    >\r\n                                    <MenuItem value={1}>Stalwart</MenuItem>\r\n                                    <MenuItem value={2}>Vagabond</MenuItem>\r\n                                    <MenuItem value={3}>Mendicant</MenuItem>\r\n                                    <MenuItem value={4}>Wright</MenuItem>\r\n                                    <MenuItem value={5}>Homebrew y Otros...</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>Seleccione a qué clase pertenece la habilidad</FormHelperText>\r\n                                    <div>{classType}</div>\r\n                                </FormControl>\r\n                           </Grid>\r\n                           <Grid item xs={12} lg={8}>\r\n\r\n                                <FormLabel component=\"legend\">Lista de Efectos Especiales</FormLabel>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Aura} onChange={handleextraAbilities} name=\"Aura\" />\r\n                                    }\r\n                                    label=\"Aura\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Autohit} onChange={handleextraAbilities} name=\"Autohit\" />\r\n                                    }\r\n                                    label=\"Autohit\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Combo} onChange={handleextraAbilities} name=\"Combo\" />\r\n                                    }\r\n                                    label=\"Combo\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Mark} onChange={handleextraAbilities} name=\"Mark\" />\r\n                                    }\r\n                                    label=\"Mark\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Stance} onChange={handleextraAbilities} name=\"Stance\" />\r\n                                    }\r\n                                    label=\"Stance\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Summon} onChange={handleextraAbilities} name=\"Summon\" />\r\n                                    }\r\n                                    label=\"Summon\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={Terrain} onChange={handleextraAbilities} name=\"Terrain\" />\r\n                                    }\r\n                                    label=\"Terrain\"\r\n                                />\r\n                                <FormHelperText>Escoja qué Efectos Especiales tiene su habilidad</FormHelperText>\r\n\r\n                           </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 2 && (\r\n                        <div>Se Eligio Trait</div>\r\n                    )}\r\n                    {dataType == 3 && (\r\n                        <div>Se Eligio Limit Breaker</div>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Grid item xs={12} lg={4}>\r\n                                <Box component=\"form\" autoComplete=\"off\">\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        required\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"Nombre del Bond\"\r\n                                        helperText=\"Dale un nombre interesante al Bond\"\r\n                                        name=\"bondName\"\r\n                                        value={bondClass.bondName}\r\n                                        onChange={handlebondClass}\r\n                                    />\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Aumento Acción 1</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        name=\"bondBonus1\"\r\n                                        value={bondClass.bondBonus1}\r\n                                        label=\"Aumento Acción 1\"\r\n                                        onChange={handlebondClass}\r\n                                    >\r\n                                    {actions.map(\r\n                                        (action) => action !== bondClass.bondBonus2 && (\r\n                                            <MenuItem value={action}>{action}</MenuItem>\r\n                                        )\r\n                                    )}\r\n                                    \r\n                                    </Select>\r\n                                    <FormHelperText>Elige la 1era acción basica del Bond</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} lg={4}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Aumento Acción 2</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        name=\"bondBonus2\"\r\n                                        value={bondClass.bondBonus2}\r\n                                        label=\"Aumento Acción 2\"\r\n                                        onChange={handlebondClass}\r\n                                    >\r\n                                    {actions.map(\r\n                                        (action) => action !== bondClass.bondBonus1 && (\r\n                                            <MenuItem value={action}>{action}</MenuItem>\r\n                                        )\r\n                                    )}\r\n                                    </Select>\r\n                                    <FormHelperText>Elige la 2da acción basica del Bond</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={4} id=\"SpaceBRows\">\r\n                            <Grid item xs={12} lg={6}>\r\n                                <Grid container spacing={3.3} id=\"SpaceBRows\">\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Descripción de Bond\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            name=\"bondDes\"\r\n                                            helperText=\"Da algunos detalles interesantes de la historia detrás del Bond\"\r\n                                            rows={5.1}\r\n                                            value={bondClass.bondDes}\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} lg={6}>\r\n                                        <Stack alignContent=\"center\">\r\n                                            <Typography\r\n                                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                                color=\"text.primary\"\r\n                                                >\r\n                                                <PsychologyIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                                Max. Stress\r\n                                            </Typography>\r\n                                            <IconSlider\r\n                                                aria-label=\"Max Stress\"\r\n                                                defaultValue={1}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                                step={1}\r\n                                                marks\r\n                                                min={1}\r\n                                                max={6}\r\n                                                name=\"maxStress\"\r\n                                                value={bondClass.maxStress}\r\n                                                onChange={handlebondClass}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} lg={6}>\r\n                                        <Stack alignContent=\"center\">\r\n                                            <Typography\r\n                                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                                color=\"text.primary\"\r\n                                                >\r\n                                                <SickIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                                Max. Harm\r\n                                            </Typography>\r\n                                            <IconSlider\r\n                                                aria-label=\"Max Harm\"\r\n                                                defaultValue={1}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                                step={1}\r\n                                                marks\r\n                                                min={1}\r\n                                                max={5}\r\n                                                name=\"Harm\"\r\n                                                value={bondClass.Harm}\r\n                                                onChange={handlebondClass}\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Stress Relief\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Cuanto Stress apacigua tu personaje al realizar una acción particular\"\r\n                                            maxRows={3}\r\n                                            value={bondClass.StressRelief}\r\n                                            name=\"StressRelief\"\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>  \r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} lg={6}>\r\n                                <Grid container spacing={2} id=\"SpaceBRows\">\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 1\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Descubrí cosas nuevas de este mundo o probé algo realmente único\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I1}\r\n                                            name=\"I1\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 2\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Expresé mi historia, creencias y pasado a través de mis acciones\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I2}\r\n                                            name=\"I2\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Ideal 3\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Ej: Me enfrenté a los desafios utilizando mi astucia, perspicacia y habilidad\"\r\n                                            maxRows={4}\r\n                                            value={bondClass.ideals.I3}\r\n                                            name=\"I3\"\r\n                                            onChange={handleBondSubClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"filled-multiline-flexible\"\r\n                                            label=\"Stress Special\"\r\n                                            fullWidth\r\n                                            multiline\r\n                                            helperText=\"Algún bonus o mejora de acciones al estar estresado\"\r\n                                            maxRows={3}\r\n                                            value={bondClass.StressSpecial}\r\n                                            name=\"StressSpecial\"\r\n                                            onChange={handlebondClass}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={2} id=\"SpaceBRows\">\r\n                            {contador < 11 && (\r\n                                <Grid item xs={12} lg={12}>\r\n                                    <IconButton id=\"contadorTotal\" aria-label=\"delete\" size=\"large\" onClick={handleUpContador}>\r\n                                        <AddCircleIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                    Bond Powers\r\n                                </Grid>\r\n                            )}\r\n                            {componente_bp}\r\n                        </Grid>\r\n                    )}\r\n                    {dataType == 4 && (\r\n                        <Grid container spacing={2} id=\"SpaceBRows\">\r\n                            <Grid item xs={6} ls={6}>\r\n                                <ClickedButton variant=\"contained\" onClick={exportData}>Guardar Bond</ClickedButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n            </Container>\r\n        </Box>  \r\n    );\r\n}\r\n\r\nexport default Convertidor;","import * as React from 'react';\r\nimport * as BondsJson from './jsons/Bonds.json';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport BadgeIcon from '@mui/icons-material/Badge';\r\nimport GpsFixedIcon from '@mui/icons-material/GpsFixed';\r\nimport LocationSearchingIcon from '@mui/icons-material/LocationSearching';\r\n\r\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Rating from '@mui/material/Rating';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link as routerLink\r\n  } from 'react-router-dom';\r\nimport { width } from '@mui/system';\r\n\r\nconst ConverterButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst BondButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: 120, \r\n    maxHeight: 300, \r\n    minWidth: 120, \r\n    minHeight: 300,\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n}));\r\n\r\nconst HalfBondButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#d45b47',\r\n    maxWidth: 120, \r\n    maxHeight: 150, \r\n    minWidth: 120, \r\n    minHeight: 150,\r\n    '&:hover': {\r\n      backgroundColor: '#b54e3d',\r\n    },\r\n    \"&.Mui-disabled\": {\r\n        backgroundColor: '#b7766b',\r\n      }\r\n}));\r\n\r\nconst InformationTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  }));\r\n\r\nconst ClickedButton = styled(Button)(({ theme }) => ({\r\n    color: '#fff',\r\n    backgroundColor: '#ff3865',\r\n    maxWidth: '100%', \r\n    maxHeight: '100%', \r\n    minWidth: '100%', \r\n    minHeight: '100%',\r\n    '&:hover': {\r\n      backgroundColor: '#9c233f',\r\n    },\r\n}));\r\n \r\n\r\nconst ValtierTextField = styled(TextField)({\r\n    /*\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    */\r\n    /*\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    */\r\n\r\n    '& .MuiOutlinedInput-root': {\r\n    /*\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n    */\r\n      '&:hover fieldset': {\r\n        \r\n        \r\n      },\r\n      /* \r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n      */\r\n    },});\r\n\r\nconst StyledRating = styled(Rating)({\r\n  '& .MuiRating-iconFilled': {\r\n    color: '#ff6d75',\r\n  },\r\n  '& .MuiRating-iconHover': {\r\n    color: '#ff3d47',\r\n  },\r\n});\r\n\r\nconst CharCreator = () => {\r\n\r\n    const [viewSelector, setviewSelector] = React.useState(1);\r\n    const [infoText, setinfoText] = React.useState('');\r\n    const [charName, setcharName] = React.useState('');\r\n    const [charBiogr, setcharBiogr] = React.useState('');\r\n    const [charRace, setcharRace] = React.useState('');\r\n    const [charCulture, setcharCulture] = React.useState('');\r\n    const [keySelected, setkeySelected] = React.useState('');\r\n    const [selectedBondBonus, setselectedBondBonus] = React.useState('');\r\n    const [actionAssign, setactionAssign] = React.useState(4);\r\n    const [combatActionValue, setcombatAction] = React.useState(3);\r\n    const [character, setCharacter] = React.useState({\r\n        charName: \"\",\r\n        charBiogr: \"\",\r\n        charRace: \"\",\r\n        charCulture: \"\",\r\n        bondSelected: {},\r\n        charLevel: 1,\r\n        NarrativeChar: {\r\n            BondName: \"\",\r\n            Sneak: 0,\r\n            Excel: 0,\r\n            Survey: 0,\r\n            Channel: 0,\r\n            Charm: 0,\r\n            Command: 0,\r\n            Tinker: 0,\r\n            Study: 0,\r\n            Recall: 0,\r\n            Traverse: 0,\r\n            Smash: 0,\r\n            Endure: 0,\r\n            Snipe: 0,\r\n            Skirmish: 0,\r\n            Crush: 0,\r\n            Stress: 0,\r\n            Harm: 0,\r\n            StressRelief: \"\",\r\n            StressSpecial: \"\",\r\n            Ideal1: \"\",\r\n            Ideal2: \"\",\r\n            Ideal3: \"\",\r\n            BondPowers: \"\"\r\n        },\r\n    });\r\n\r\n    const actions = [\"Sneak\", \"Traverse\", \"Survey\", \"Study\", \"Charm\", \"Command\", \"Tinker\", \"Excel\", \"Smash\", \"Endure\", \"Channel\", \"Recall\"];\r\n    const combatAction = [\"Skirmish\", \"Crush\", \"Snipe\"];\r\n    const narCombatValues = [2,1,0];\r\n    const [actionsValues, setactionsValues] = React.useState({\r\n        \"Sneak\": 0, \"Traverse\": 0, \"Survey\": 0, \"Study\": 0, \"Charm\": 0, \"Command\": 0, \r\n        \"Tinker\": 0, \"Excel\": 0, \"Smash\": 0, \"Endure\": 0, \"Channel\": 0, \"Recall\": 0,\r\n        \"Skirmish\": 0, \"Crush\": 0, \"Snipe\": 0\r\n    })\r\n\r\n\r\n\r\n    const bondKeys = Object.keys(BondsJson.default);\r\n    var selectedBond = {};\r\n    var finalNarrative = {};\r\n    let bond_component = [];\r\n    var max = 0;\r\n\r\n    for (let i = 0; i < bondKeys.length; i++) {\r\n        let element = bondKeys[i][1];\r\n        if (element > max) {\r\n            max = element;\r\n        }\r\n        \r\n    }\r\n\r\n    console.log(character);\r\n\r\n    const handleinfoText = (event) => {\r\n        if (event.target.name) {\r\n            setinfoText(event.target.name)\r\n        }\r\n        else {\r\n            setinfoText(event.target.id)\r\n        }\r\n        \r\n    }\r\n    \r\n    const handleselectedBondBonus = (event) => {\r\n        setselectedBondBonus(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: 2},\r\n        });\r\n    }\r\n\r\n    const handlecharName = (event) => {\r\n        setcharName(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handlecharBiogr = (event) => {\r\n        setcharBiogr(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }; \r\n\r\n    const handlecharRace = (event) => {\r\n        setcharRace(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handlecharCulture = (event) => {\r\n        setcharCulture(event.target.value);\r\n        setCharacter({\r\n            ...character,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handlekeySelected = (event) => {\r\n        setkeySelected(event.target.value);\r\n    }\r\n\r\n    const handleActionPoint = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: event.target.value}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue\r\n        });\r\n        if (newValue == null){\r\n            setactionAssign(count => count + actionsValues[event.target.name]);\r\n        }\r\n        else {\r\n            setactionAssign(count => count + actionsValues[event.target.name] - newValue);\r\n        };\r\n    }\r\n\r\n    const handleActionPointBond = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: Number(event.target.value) + 2}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue + 2\r\n        });\r\n        if (newValue == actionsValues[event.target.name] - 2){\r\n            setactionAssign(count => count + 1);\r\n        }\r\n        else {\r\n            setactionAssign(count => count - newValue);\r\n        };\r\n    }\r\n\r\n    const handleActionCombat = (event, newValue) => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [event.target.name]: event.target.value}\r\n        });\r\n        setactionsValues({\r\n            ...actionsValues,\r\n            [event.target.name]: newValue\r\n        });\r\n        if (newValue == null){\r\n            setcombatAction(count => count + actionsValues[event.target.name]);\r\n        }\r\n        else {\r\n            setcombatAction(count => count + actionsValues[event.target.name] - newValue);\r\n        };\r\n    }\r\n\r\n    Object.assign(selectedBond, BondsJson.default[keySelected]);\r\n    console.log(selectedBond);\r\n\r\n    const handleBondFinalName = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"BondName\"]: selectedBond.bondName} \r\n        })\r\n    }\r\n\r\n    const handleBondFinalSR = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"StressRelief\"]: selectedBond.StressRelief}\r\n        })\r\n    }\r\n    \r\n    const handleBondFinalSS = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"StressSpecial\"]: selectedBond.StressSpecial}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalHarm = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Harm\"]: selectedBond.Harm}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalStress = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Stress\"]: selectedBond.maxStress}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal1 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal1\"]: selectedBond.ideals[\"I1\"]}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal2 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal2\"]: selectedBond.ideals[\"I2\"]}\r\n        })\r\n    }\r\n\r\n    const handleBondFinalIdeal3 = () => {\r\n        setCharacter({\r\n            ...character,\r\n            [\"NarrativeChar\"]: {...character.NarrativeChar, [\"Ideal3\"]: selectedBond.ideals[\"I3\"]}\r\n        })\r\n    }\r\n\r\n    const handleFinalNarrative = () => {\r\n        Object.assign(character.bondSelected, selectedBond);\r\n        let stringChar = JSON.stringify(character);\r\n        console.log(stringChar);\r\n        console.log(finalNarrative);\r\n\r\n        console.log(character);\r\n    }\r\n\r\n    const exportData = () => {\r\n        handleFinalNarrative();\r\n        const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(character)\r\n        )}`;\r\n        const link = document.createElement(\"a\");\r\n        link.href = jsonString;\r\n        link.download = \"ctype_\"+character.charName+\".json\";\r\n        link.click();\r\n      };\r\n\r\n    for (let index = 0; index < max; index++) {\r\n        let actualBond = bondKeys[index];\r\n        var handlerBond = BondsJson.default[actualBond];\r\n        bond_component.push(\r\n            <Grid container spacing={0} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item lg={11}>\r\n                    <Box\r\n                        width=\"100%\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            '& > :not(style)': {\r\n                            m: 1,\r\n                            width: \"100%\",\r\n                            background: \"#ed8e7f\",\r\n                            height: 300,\r\n                            },\r\n                        }}\r\n                        >\r\n                        <Paper elevation={3}>\r\n                        <Box sx={{ my: 1, mx: 2, color: \"#fff\" }}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item lg={9}>\r\n                                        <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                                            {handlerBond.bondName}\r\n                                        </Typography>\r\n                                </Grid>\r\n                                <Grid item lg={3}>\r\n                                    <Chip label={\"+2 \"+handlerBond.bondBonus1} sx={{\r\n                                            bgcolor: \"#ff3865\",\r\n                                            color: \"#fff\",\r\n                                            mx: 1\r\n                                        }}/>\r\n                                    |\r\n                                    <Chip label={\"+2 \"+handlerBond.bondBonus2} sx={{\r\n                                            bgcolor: \"#ff3865\",\r\n                                            color: \"#fff\",\r\n                                            mx: 1\r\n                                        }}/>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography color=\"text.secondary\" variant=\"body2\">\r\n                            {handlerBond.bondDes}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Divider variant=\"middle\" sx={{\r\n                            bgcolor: \"rgba(0, 0, 0, 0.5)\"\r\n                        }}/>\r\n                        <Box sx={{ mx: 2, my: 1, color: \"#fff\" }}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item lg={2}>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item lg={12}>\r\n                                            <Chip label={\"Max. Stress: \"+handlerBond.maxStress} sx={{\r\n                                                bgcolor: \"#ff3865\",\r\n                                                color: \"#fff\",\r\n                                            }}/>\r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Chip label={\"Max. Harm: \"+handlerBond.Harm} sx={{\r\n                                                bgcolor: \"#ff3865\",\r\n                                                color: \"#fff\",\r\n                                            }}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <Grid container spacing={1}>\r\n                                            <Grid item>\r\n                                                <Chip label=\"Stress Relief\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">{handlerBond.StressRelief}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Chip label=\"Stress Special\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">{handlerBond.StressSpecial}</Typography>\r\n                                            </Grid>\r\n                                            \r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={6}>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I1}\r\n                                                </Typography>   \r\n                                            </Stack>                               \r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I2}\r\n                                                </Typography>   \r\n                                            </Stack>\r\n                                        </Grid>\r\n                                        <Grid item lg={12}>\r\n                                            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                                <Chip label=\"Ideal 1\" sx={{\r\n                                                    bgcolor: \"#ff3865\",\r\n                                                    color: \"#fff\",\r\n                                                }}/>\r\n                                                <Typography gutterBottom variant=\"body2\">\r\n                                                    {handlerBond.ideals.I3}\r\n                                                </Typography>   \r\n                                            </Stack>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        </Paper>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item lg={1}>\r\n                        {handlerBond.bondName == selectedBond.bondName ? (\r\n                            <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                aria-label=\"vertical contained button group\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                {selectedBond[\"bondBonus1\"] == selectedBondBonus ? (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus1\"]}\r\n                                        value={selectedBond[\"bondBonus1\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        disabled\r\n                                        >\r\n                                    {selectedBond.bondBonus1}\r\n                                    </HalfBondButton>\r\n                                ) : (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus1\"]}\r\n                                        value={selectedBond[\"bondBonus1\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        >\r\n                                    {selectedBond.bondBonus1}\r\n                                    </HalfBondButton>\r\n                                )}\r\n\r\n                                {selectedBond[\"bondBonus2\"] == selectedBondBonus ? (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus2\"]}\r\n                                        value={selectedBond[\"bondBonus2\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        disabled\r\n                                        >\r\n                                    {selectedBond.bondBonus2}\r\n                                    </HalfBondButton>\r\n                                ) : (\r\n                                    <HalfBondButton \r\n                                        id='GroupButtons'\r\n                                        name={selectedBond[\"bondBonus2\"]}\r\n                                        value={selectedBond[\"bondBonus2\"]}\r\n                                        onClick={handleselectedBondBonus}\r\n                                        >\r\n                                    {selectedBond.bondBonus2}\r\n                                    </HalfBondButton>\r\n                                )}\r\n                            </ButtonGroup>\r\n                        ) : (\r\n                            <BondButton \r\n                                variant=\"contained\"\r\n                                value={bondKeys[index]}\r\n                                onClick={handlekeySelected}\r\n                                >\r\n                            Seleccionar\r\n                            </BondButton>\r\n                        )}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    return(\r\n        <Container maxWidth='lg'>\r\n                {/* Row  */}\r\n                <Grid item xs={12} lg={12} id=\"SpaceBRows\">\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                        underline=\"hover\"\r\n                        sx={{ display: 'flex', alignItems: 'center' }}\r\n                        color=\"inherit\"\r\n                        href=\"/personajes\"\r\n                        >\r\n                        <PeopleIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                        Personajes\r\n                        </Link>\r\n                        {viewSelector === 1 ? (\r\n                            <Typography\r\n                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                color=\"text.primary\"\r\n                                >\r\n                                <BadgeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                Información Basica\r\n                            </Typography>\r\n                        ) : (\r\n                            <Link\r\n                                underline=\"hover\"\r\n                                sx={{ \r\n                                    display: 'flex', \r\n                                    alignItems: 'center' , \r\n                                    fontFamily: \"Arial\", \r\n                                    fontSize: \"1rem\", \r\n                                    letterSpacing: \"0.15008px\"}}\r\n                                color=\"inherit\"\r\n                                component=\"button\"\r\n                                onClick={() => setviewSelector(1)}\r\n                                >\r\n                                <BadgeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                Información Basica\r\n                            </Link>\r\n                        )}\r\n                        {viewSelector === 2 ? (\r\n                            <Typography\r\n                                sx={{ display: 'flex', alignItems: 'center' }}\r\n                                color=\"text.primary\"\r\n                                >\r\n                                <RecordVoiceOverIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                Narrativo\r\n                            </Typography>\r\n                        ) : (\r\n                            <Link\r\n                                underline=\"hover\"\r\n                                sx={{ \r\n                                    display: 'flex', \r\n                                    alignItems: 'center' , \r\n                                    fontFamily: \"Arial\", \r\n                                    fontSize: \"1rem\", \r\n                                    letterSpacing: \"0.15008px\"}}\r\n                                color=\"inherit\"\r\n                                component=\"button\"\r\n                                onClick={() => setviewSelector(2)}\r\n                                >\r\n                                <RecordVoiceOverIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n                                Narrativo\r\n                            </Link>\r\n                        )}\r\n                    </Breadcrumbs>\r\n                </Grid>\r\n\r\n            {viewSelector === 1 && (\r\n          \r\n            <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                {/* Big Row 4/12  */}\r\n                <Grid item xs={12} lg={4}>\r\n                    <Grid container rowSpacing={3}>\r\n                        <Grid item lg={8}>\r\n                            <Box\r\n                                width=\"100%\"\r\n                                sx={{\r\n                                    backgroundColor: '#e59067',\r\n                                    width: \"169px\",\r\n                                    height: \"169px\",\r\n                                    border: '1px solid #b34d3d',\r\n                                    borderRadius: 2,\r\n                                }} \r\n                            >\r\n                            <img src='https://pbs.twimg.com/media/FPg9OJLakAAbFV7?format=jpg&name=4096x4096' width=\"169px\" height=\"169px\"></img>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item lg={10}>\r\n                            <FormControl fullWidth required>\r\n                            <InformationTooltip onOpen={handleinfoText}>\r\n                            <TextField\r\n                                id=\"filled-multiline-flexible\"\r\n                                label=\"Biografía\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows={5}\r\n                                name=\"charBiogr\"\r\n                                value={charBiogr}\r\n                                onChange={handlecharBiogr}\r\n                                variant=\"filled\"\r\n                            />\r\n                            </InformationTooltip>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Big Row 4/12  */}\r\n                <Grid item xs={12} lg={4}>\r\n                    <Grid container rowSpacing={4}>\r\n                        <Grid item lg={12}>\r\n                            \r\n                                <Box component=\"form\" autoComplete=\"off\">\r\n                                    <FormControl fullWidth required>\r\n                                    <InformationTooltip onOpen={handleinfoText}>\r\n                                    <ValtierTextField\r\n                                        required\r\n                                        id=\"outlined-required\"\r\n                                        label=\"Nombre de Personaje\"\r\n                                        value={charName}\r\n                                        name=\"charName\"\r\n                                        onChange={handlecharName}\r\n                                        style = {{width: 340}}\r\n                                    />\r\n                                    </InformationTooltip>\r\n                                    <FormHelperText>Colocale un nombre o apodo a tu heroe</FormHelperText>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            \r\n                        </Grid>\r\n                        <Grid item lg={12}>\r\n                            <Box component=\"form\" autoComplete=\"off\">\r\n                                \r\n                                <FormControl fullWidth required>\r\n                                <InformationTooltip onOpen={handleinfoText}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"outlined-required\"\r\n                                    label=\"Raza/Kin\"\r\n                                    \r\n                                    value={charRace}\r\n                                    name=\"charRace\"\r\n                                    onChange={handlecharRace}\r\n                                    style = {{width: 340}}\r\n                                />\r\n                                </InformationTooltip>\r\n                                <FormHelperText>Ingrese la Raza/Kin de su personaje</FormHelperText>\r\n                                </FormControl>\r\n                                \r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item lg={12}>\r\n                            \r\n                            <FormControl fullWidth required>\r\n                                <InputLabel id=\"demo-simple-select-label\">Cultura</InputLabel>\r\n                                <InformationTooltip onOpen={handleinfoText}>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"charCulture\"\r\n                                    value={charCulture}\r\n                                    label=\"Cultura\"\r\n                                    name=\"charCulture\"\r\n                                    onChange={handlecharCulture}\r\n                                    style = {{width: 340}}\r\n                                >\r\n                                <MenuItem value={\"Yeokin\"}>Yeokin</MenuItem>\r\n                                <MenuItem value={\"Islander\"}>Islander</MenuItem>\r\n                                <MenuItem value={\"Leggio\"}>Leggio</MenuItem>\r\n                                <MenuItem value={\"Churner\"}>Churner</MenuItem>\r\n                                <MenuItem value={\"Chronicler\"}>Chronicler</MenuItem>\r\n                                <MenuItem value={\"Guilder\"}>Guilder</MenuItem>\r\n                                <MenuItem value={\"Other...\"}>Other...</MenuItem>\r\n                                </Select>\r\n                                </InformationTooltip>\r\n                                <FormHelperText>Escoga la cultura que posee su personaje</FormHelperText>\r\n                            </FormControl>\r\n                        \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Big Row 4/12  */}\r\n                <Grid item lg={4}>\r\n                    <Grid container rowSpacing={4}>\r\n                        <Grid item lg={12}>\r\n                            <Box\r\n                                width=\"100%\"\r\n                                sx={{\r\n                                    backgroundColor: '#d45b47',\r\n                                    width: \"100%\",\r\n                                    height: \"280px\",\r\n                                    border: '1px solid #b34d3d',\r\n                                    borderRadius: 2,\r\n                                }}    \r\n                            >\r\n                                <div>{infoText}</div>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item lg={12}>\r\n                                <ConverterButton \r\n                                    variant=\"contained\"\r\n                                    value={2}\r\n                                    onClick={() => setviewSelector(2)}\r\n                                    >\r\n                                Siguiente\r\n                                </ConverterButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            )}\r\n\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                    {bond_component}\r\n                </Grid>\r\n            )}\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item lg={4} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Typography variant=\"h4\">Acciones Narrativas</Typography>\r\n                    </Grid>\r\n                    <Grid item lg ={8}  justifyContent=\"center\" alignItems=\"center\">\r\n                        <Chip label={\"Puntos de Acción Restantes: \"+actionAssign} sx={{ bgcolor: \"#ff3865\", color: \"#fff\", mx: 1 }}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                    {actions.map(\r\n                        (action) => action == selectedBondBonus ? (\r\n                            <Grid item xs={6} lg={4}>\r\n                                <Typography component=\"legend\">{action}</Typography>\r\n                                <Stack direction=\"row\" spacing={0}>\r\n                                    <StyledRating\r\n                                        name={action}\r\n                                        defaultValue={2}\r\n                                        precision={1}\r\n                                        disabled\r\n                                        max={2}\r\n                                        icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                        emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                    />\r\n                                    <StyledRating\r\n                                        name={action}\r\n                                        defaultValue={0}\r\n                                        value={actionsValues[action]}\r\n                                        precision={1}\r\n                                        max={1}\r\n                                        onChange={handleActionPointBond}\r\n                                        icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                        emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                    />\r\n                                </Stack>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid item xs={6} lg={4}>\r\n                                <Typography component=\"legend\">{action}</Typography>\r\n                                <StyledRating\r\n                                    name={action}\r\n                                    defaultValue={0}\r\n                                    value={actionsValues[action]}\r\n                                    precision={1}\r\n                                    max={3}\r\n                                    onChange={handleActionPoint}\r\n                                    icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                    emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            )}\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item lg={4} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Typography variant=\"h4\">Acciones de Combate Narrativo</Typography>\r\n                    </Grid>\r\n                    <Grid item lg ={8}  justifyContent=\"center\" alignItems=\"center\">\r\n                        <Chip label={\"Asignar 2, 1 y 0 puntos a las acciones\"} sx={{ bgcolor: \"#ff3865\", color: \"#fff\", mx: 1 }}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                    {combatAction.map(\r\n                        (action) => (\r\n                            <Grid item xs={6} lg={4}>\r\n                                <Typography component=\"legend\">{action}</Typography>\r\n                                <StyledRating\r\n                                    name={action}\r\n                                    defaultValue={0}\r\n                                    value={actionsValues[action]}\r\n                                    precision={1}\r\n                                    max={2}\r\n                                    onChange={handleActionCombat}\r\n                                    icon={<GpsFixedIcon fontSize=\"inherit\" />}\r\n                                    emptyIcon={<LocationSearchingIcon fontSize=\"inherit\" />}\r\n                                />\r\n                            </Grid>\r\n                    ))}\r\n                </Grid>\r\n            )}\r\n            {viewSelector === 2 && (\r\n                <Grid container spacing={1} id=\"SpaceBRows\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n                    <Grid item lg={4}>\r\n                        <ClickedButton variant=\"contained\" onClick={exportData}>Guardar Personaje Narrativo</ClickedButton>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CharCreator;","import './App.css';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect, useRef} from \"react\";\nimport { logout } from './redux/actions/loginActions.js';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport Home from './views/Home.js';\nimport Compendio from './views/Compendio.js';\nimport Navigation from './views/Navigation.js';\nimport Footer from './views/Footer.js';\nimport Body from './views/Body.js';\nimport Personajes from './views/Personajes.js';\nimport Campana from './views/Campana.js';\nimport Convertidor from './views/Convertidor.js';\nimport CharCreator from './views/CharCreator.js';\nimport { padding } from '@mui/system';\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nexport const componentWindow = () => {\n  const refContainer = useRef();\n  const [dimensions, setDimensions] = \n    useState({ width: 0, height: 0 });\n  useEffect(() => {\n    if (refContainer.current) {\n      setDimensions({\n        width: refContainer.current.offsetWidth,\n        height: refContainer.current.offsetHeight,\n      });\n    }\n  }, []);\n  return dimensions;\n}\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\n  const size = useWindowSize();\n  const compSize = componentWindow();\n\n  console.log(compSize);\n\n  const handleLogout = (e) => {\n    dispatch(logout());\n  }\n\n  console.log(isLogged);\n\n  return (\n    <div id='Main'>\n      <Router>\n        <Grid container rowSpacing={3} flex>\n              <Grid item xs={12}>\n                  <Navigation loginstate={isLogged}/>\n              </Grid>\n              \n              <Grid item xs={12}>\n                  <Routes>\n                      <Route path='/' element={<Body loginstate={isLogged}/>}/>\n                      <Route path='/compendio' element={<Compendio/>}/>\n                      <Route path='/campana' element={<Campana/>}/>\n                      <Route path='/convertidor' element={<Convertidor/>}/>\n                      <Route path='/personajes' element={<Personajes/>}/>\n                      <Route path='/characterCreator' element={<CharCreator/>}/>\n                  </Routes>\n              </Grid>\n              \n              <Grid item xs={12} fixed>\n                <Footer loginstate={isLogged}/>\n              </Grid>\n          </Grid>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    isLogged: localStorage.getItem('token') ? true : false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    if(action.type){\r\n        return {\r\n            ...state,\r\n            ...action.payload,\r\n        };\r\n    } else{\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport authReducer from './reducers/loginReducers.js';\r\n\r\nconst appReducer = combineReducers({\r\n    authReducer: authReducer,\r\n})\r\n\r\nexport default createStore(appReducer);","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}